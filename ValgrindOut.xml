<?xml version="1.0"?>

<valgrindoutput>

<protocolversion>4</protocolversion>
<protocoltool>memcheck</protocoltool>

<preamble>
  <line>Memcheck, a memory error detector</line>
  <line>Copyright (C) 2002-2013, and GNU GPL'd, by Julian Seward et al.</line>
  <line>Using Valgrind-3.10.0 and LibVEX; rerun with -h for copyright info</line>
  <line>Command: /home/eduardo/Documentos/trabAED/trabAED/bin/Debug/trabAED</line>
</preamble>

<pid>5877</pid>
<ppid>5629</ppid>
<tool>memcheck</tool>

<args>
  <vargv>
    <exe>/usr/bin/valgrind.bin</exe>
    <arg>--leak-check=full</arg>
    <arg>--track-origins=yes</arg>
    <arg>--xml=yes</arg>
    <arg>--xml-file=/home/eduardo/Documentos/trabAED/trabAED/ValgrindOut.xml</arg>
  </vargv>
  <argv>
    <exe>/home/eduardo/Documentos/trabAED/trabAED/bin/Debug/trabAED</exe>
  </argv>
</args>

<status>
  <state>RUNNING</state>
  <time>00:00:00:00.428 </time>
</status>

<error>
  <unique>0x0</unique>
  <tid>1</tid>
  <kind>UninitCondition</kind>
  <what>Conditional jump or move depends on uninitialised value(s)</what>
  <stack>
    <frame>
      <ip>0x5154D85</ip>
      <obj>/lib/x86_64-linux-gnu/libm-2.19.so</obj>
      <fn>__ieee754_pow_sse2</fn>
      <dir>/build/glibc-qK83Be/glibc-2.19/math/../sysdeps/ieee754/dbl-64</dir>
      <file>e_pow.c</file>
      <line>75</line>
    </frame>
    <frame>
      <ip>0x5165AAB</ip>
      <obj>/lib/x86_64-linux-gnu/libm-2.19.so</obj>
      <fn>pow</fn>
      <dir>/build/glibc-qK83Be/glibc-2.19/math</dir>
      <file>w_pow.c</file>
      <line>27</line>
    </frame>
    <frame>
      <ip>0x40533F</ip>
      <obj>/home/eduardo/Documentos/trabAED/trabAED/bin/Debug/trabAED</obj>
      <fn>Table::rabinKarp(std::string)</fn>
      <dir>/home/eduardo/Documentos/trabAED/trabAED</dir>
      <file>Table.cpp</file>
      <line>58</line>
    </frame>
    <frame>
      <ip>0x405423</ip>
      <obj>/home/eduardo/Documentos/trabAED/trabAED/bin/Debug/trabAED</obj>
      <fn>Table::insertRecord(Record*)</fn>
      <dir>/home/eduardo/Documentos/trabAED/trabAED</dir>
      <file>Table.cpp</file>
      <line>75</line>
    </frame>
    <frame>
      <ip>0x402D9A</ip>
      <obj>/home/eduardo/Documentos/trabAED/trabAED/bin/Debug/trabAED</obj>
      <fn>readSql(std::string)</fn>
      <dir>/home/eduardo/Documentos/trabAED/trabAED</dir>
      <file>main.cpp</file>
      <line>131</line>
    </frame>
    <frame>
      <ip>0x401B2C</ip>
      <obj>/home/eduardo/Documentos/trabAED/trabAED/bin/Debug/trabAED</obj>
      <fn>main</fn>
      <dir>/home/eduardo/Documentos/trabAED/trabAED</dir>
      <file>main.cpp</file>
      <line>13</line>
    </frame>
  </stack>
  <auxwhat>Uninitialised value was created by a heap allocation</auxwhat>
  <stack>
    <frame>
      <ip>0x4C29180</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>operator new(unsigned long)</fn>
      <dir>/mnt/valgrind-3.10.0/coregrind/m_replacemalloc</dir>
      <file>vg_replace_malloc.c</file>
      <line>324</line>
    </frame>
    <frame>
      <ip>0x4EF3E98</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.20</obj>
      <fn>std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x4EF4B0A</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.20</obj>
      <fn>std::string::_Rep::_M_clone(std::allocator&lt;char&gt; const&amp;, unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4EF4BAF</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.20</obj>
      <fn>std::string::reserve(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4EF4E39</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.20</obj>
    </frame>
    <frame>
      <ip>0x4EF4F0D</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.20</obj>
      <fn>std::string::append(char const*, unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4EABA9F</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.20</obj>
      <fn>std::basic_istream&lt;char, std::char_traits&lt;char&gt; &gt;&amp; std::getline&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;(std::basic_istream&lt;char, std::char_traits&lt;char&gt; &gt;&amp;, std::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;&amp;, char)</fn>
    </frame>
    <frame>
      <ip>0x4028DF</ip>
      <obj>/home/eduardo/Documentos/trabAED/trabAED/bin/Debug/trabAED</obj>
      <fn>readSql(std::string)</fn>
      <dir>/home/eduardo/Documentos/trabAED/trabAED</dir>
      <file>main.cpp</file>
      <line>87</line>
    </frame>
    <frame>
      <ip>0x401B2C</ip>
      <obj>/home/eduardo/Documentos/trabAED/trabAED/bin/Debug/trabAED</obj>
      <fn>main</fn>
      <dir>/home/eduardo/Documentos/trabAED/trabAED</dir>
      <file>main.cpp</file>
      <line>13</line>
    </frame>
  </stack>
</error>

<error>
  <unique>0x1</unique>
  <tid>1</tid>
  <kind>UninitCondition</kind>
  <what>Conditional jump or move depends on uninitialised value(s)</what>
  <stack>
    <frame>
      <ip>0x5154D8B</ip>
      <obj>/lib/x86_64-linux-gnu/libm-2.19.so</obj>
      <fn>__ieee754_pow_sse2</fn>
      <dir>/build/glibc-qK83Be/glibc-2.19/math/../sysdeps/ieee754/dbl-64</dir>
      <file>e_pow.c</file>
      <line>75</line>
    </frame>
    <frame>
      <ip>0x5165AAB</ip>
      <obj>/lib/x86_64-linux-gnu/libm-2.19.so</obj>
      <fn>pow</fn>
      <dir>/build/glibc-qK83Be/glibc-2.19/math</dir>
      <file>w_pow.c</file>
      <line>27</line>
    </frame>
    <frame>
      <ip>0x40533F</ip>
      <obj>/home/eduardo/Documentos/trabAED/trabAED/bin/Debug/trabAED</obj>
      <fn>Table::rabinKarp(std::string)</fn>
      <dir>/home/eduardo/Documentos/trabAED/trabAED</dir>
      <file>Table.cpp</file>
      <line>58</line>
    </frame>
    <frame>
      <ip>0x405423</ip>
      <obj>/home/eduardo/Documentos/trabAED/trabAED/bin/Debug/trabAED</obj>
      <fn>Table::insertRecord(Record*)</fn>
      <dir>/home/eduardo/Documentos/trabAED/trabAED</dir>
      <file>Table.cpp</file>
      <line>75</line>
    </frame>
    <frame>
      <ip>0x402D9A</ip>
      <obj>/home/eduardo/Documentos/trabAED/trabAED/bin/Debug/trabAED</obj>
      <fn>readSql(std::string)</fn>
      <dir>/home/eduardo/Documentos/trabAED/trabAED</dir>
      <file>main.cpp</file>
      <line>131</line>
    </frame>
    <frame>
      <ip>0x401B2C</ip>
      <obj>/home/eduardo/Documentos/trabAED/trabAED/bin/Debug/trabAED</obj>
      <fn>main</fn>
      <dir>/home/eduardo/Documentos/trabAED/trabAED</dir>
      <file>main.cpp</file>
      <line>13</line>
    </frame>
  </stack>
  <auxwhat>Uninitialised value was created by a heap allocation</auxwhat>
  <stack>
    <frame>
      <ip>0x4C29180</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>operator new(unsigned long)</fn>
      <dir>/mnt/valgrind-3.10.0/coregrind/m_replacemalloc</dir>
      <file>vg_replace_malloc.c</file>
      <line>324</line>
    </frame>
    <frame>
      <ip>0x4EF3E98</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.20</obj>
      <fn>std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x4EF4B0A</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.20</obj>
      <fn>std::string::_Rep::_M_clone(std::allocator&lt;char&gt; const&amp;, unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4EF4BAF</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.20</obj>
      <fn>std::string::reserve(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4EF4E39</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.20</obj>
    </frame>
    <frame>
      <ip>0x4EF4F0D</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.20</obj>
      <fn>std::string::append(char const*, unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4EABA9F</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.20</obj>
      <fn>std::basic_istream&lt;char, std::char_traits&lt;char&gt; &gt;&amp; std::getline&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;(std::basic_istream&lt;char, std::char_traits&lt;char&gt; &gt;&amp;, std::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;&amp;, char)</fn>
    </frame>
    <frame>
      <ip>0x4028DF</ip>
      <obj>/home/eduardo/Documentos/trabAED/trabAED/bin/Debug/trabAED</obj>
      <fn>readSql(std::string)</fn>
      <dir>/home/eduardo/Documentos/trabAED/trabAED</dir>
      <file>main.cpp</file>
      <line>87</line>
    </frame>
    <frame>
      <ip>0x401B2C</ip>
      <obj>/home/eduardo/Documentos/trabAED/trabAED/bin/Debug/trabAED</obj>
      <fn>main</fn>
      <dir>/home/eduardo/Documentos/trabAED/trabAED</dir>
      <file>main.cpp</file>
      <line>13</line>
    </frame>
  </stack>
</error>

<error>
  <unique>0x2</unique>
  <tid>1</tid>
  <kind>UninitCondition</kind>
  <what>Conditional jump or move depends on uninitialised value(s)</what>
  <stack>
    <frame>
      <ip>0x5154A51</ip>
      <obj>/lib/x86_64-linux-gnu/libm-2.19.so</obj>
      <fn>__ieee754_pow_sse2</fn>
      <dir>/build/glibc-qK83Be/glibc-2.19/math/../sysdeps/ieee754/dbl-64</dir>
      <file>e_pow.c</file>
      <line>87</line>
    </frame>
    <frame>
      <ip>0x5165AAB</ip>
      <obj>/lib/x86_64-linux-gnu/libm-2.19.so</obj>
      <fn>pow</fn>
      <dir>/build/glibc-qK83Be/glibc-2.19/math</dir>
      <file>w_pow.c</file>
      <line>27</line>
    </frame>
    <frame>
      <ip>0x40533F</ip>
      <obj>/home/eduardo/Documentos/trabAED/trabAED/bin/Debug/trabAED</obj>
      <fn>Table::rabinKarp(std::string)</fn>
      <dir>/home/eduardo/Documentos/trabAED/trabAED</dir>
      <file>Table.cpp</file>
      <line>58</line>
    </frame>
    <frame>
      <ip>0x405423</ip>
      <obj>/home/eduardo/Documentos/trabAED/trabAED/bin/Debug/trabAED</obj>
      <fn>Table::insertRecord(Record*)</fn>
      <dir>/home/eduardo/Documentos/trabAED/trabAED</dir>
      <file>Table.cpp</file>
      <line>75</line>
    </frame>
    <frame>
      <ip>0x402D9A</ip>
      <obj>/home/eduardo/Documentos/trabAED/trabAED/bin/Debug/trabAED</obj>
      <fn>readSql(std::string)</fn>
      <dir>/home/eduardo/Documentos/trabAED/trabAED</dir>
      <file>main.cpp</file>
      <line>131</line>
    </frame>
    <frame>
      <ip>0x401B2C</ip>
      <obj>/home/eduardo/Documentos/trabAED/trabAED/bin/Debug/trabAED</obj>
      <fn>main</fn>
      <dir>/home/eduardo/Documentos/trabAED/trabAED</dir>
      <file>main.cpp</file>
      <line>13</line>
    </frame>
  </stack>
  <auxwhat>Uninitialised value was created by a heap allocation</auxwhat>
  <stack>
    <frame>
      <ip>0x4C29180</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>operator new(unsigned long)</fn>
      <dir>/mnt/valgrind-3.10.0/coregrind/m_replacemalloc</dir>
      <file>vg_replace_malloc.c</file>
      <line>324</line>
    </frame>
    <frame>
      <ip>0x4EF3E98</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.20</obj>
      <fn>std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x4EF4B0A</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.20</obj>
      <fn>std::string::_Rep::_M_clone(std::allocator&lt;char&gt; const&amp;, unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4EF4BAF</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.20</obj>
      <fn>std::string::reserve(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4EF4E39</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.20</obj>
    </frame>
    <frame>
      <ip>0x4EF4F0D</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.20</obj>
      <fn>std::string::append(char const*, unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4EABA9F</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.20</obj>
      <fn>std::basic_istream&lt;char, std::char_traits&lt;char&gt; &gt;&amp; std::getline&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;(std::basic_istream&lt;char, std::char_traits&lt;char&gt; &gt;&amp;, std::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;&amp;, char)</fn>
    </frame>
    <frame>
      <ip>0x4028DF</ip>
      <obj>/home/eduardo/Documentos/trabAED/trabAED/bin/Debug/trabAED</obj>
      <fn>readSql(std::string)</fn>
      <dir>/home/eduardo/Documentos/trabAED/trabAED</dir>
      <file>main.cpp</file>
      <line>87</line>
    </frame>
    <frame>
      <ip>0x401B2C</ip>
      <obj>/home/eduardo/Documentos/trabAED/trabAED/bin/Debug/trabAED</obj>
      <fn>main</fn>
      <dir>/home/eduardo/Documentos/trabAED/trabAED</dir>
      <file>main.cpp</file>
      <line>13</line>
    </frame>
  </stack>
</error>

<error>
  <unique>0x3</unique>
  <tid>1</tid>
  <kind>UninitCondition</kind>
  <what>Conditional jump or move depends on uninitialised value(s)</what>
  <stack>
    <frame>
      <ip>0x5154DDA</ip>
      <obj>/lib/x86_64-linux-gnu/libm-2.19.so</obj>
      <fn>__ieee754_pow_sse2</fn>
      <dir>/build/glibc-qK83Be/glibc-2.19/math/../sysdeps/ieee754/dbl-64</dir>
      <file>e_pow.c</file>
      <line>87</line>
    </frame>
    <frame>
      <ip>0x5165AAB</ip>
      <obj>/lib/x86_64-linux-gnu/libm-2.19.so</obj>
      <fn>pow</fn>
      <dir>/build/glibc-qK83Be/glibc-2.19/math</dir>
      <file>w_pow.c</file>
      <line>27</line>
    </frame>
    <frame>
      <ip>0x40533F</ip>
      <obj>/home/eduardo/Documentos/trabAED/trabAED/bin/Debug/trabAED</obj>
      <fn>Table::rabinKarp(std::string)</fn>
      <dir>/home/eduardo/Documentos/trabAED/trabAED</dir>
      <file>Table.cpp</file>
      <line>58</line>
    </frame>
    <frame>
      <ip>0x405423</ip>
      <obj>/home/eduardo/Documentos/trabAED/trabAED/bin/Debug/trabAED</obj>
      <fn>Table::insertRecord(Record*)</fn>
      <dir>/home/eduardo/Documentos/trabAED/trabAED</dir>
      <file>Table.cpp</file>
      <line>75</line>
    </frame>
    <frame>
      <ip>0x402D9A</ip>
      <obj>/home/eduardo/Documentos/trabAED/trabAED/bin/Debug/trabAED</obj>
      <fn>readSql(std::string)</fn>
      <dir>/home/eduardo/Documentos/trabAED/trabAED</dir>
      <file>main.cpp</file>
      <line>131</line>
    </frame>
    <frame>
      <ip>0x401B2C</ip>
      <obj>/home/eduardo/Documentos/trabAED/trabAED/bin/Debug/trabAED</obj>
      <fn>main</fn>
      <dir>/home/eduardo/Documentos/trabAED/trabAED</dir>
      <file>main.cpp</file>
      <line>13</line>
    </frame>
  </stack>
  <auxwhat>Uninitialised value was created by a heap allocation</auxwhat>
  <stack>
    <frame>
      <ip>0x4C29180</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>operator new(unsigned long)</fn>
      <dir>/mnt/valgrind-3.10.0/coregrind/m_replacemalloc</dir>
      <file>vg_replace_malloc.c</file>
      <line>324</line>
    </frame>
    <frame>
      <ip>0x4EF3E98</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.20</obj>
      <fn>std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x4EF4B0A</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.20</obj>
      <fn>std::string::_Rep::_M_clone(std::allocator&lt;char&gt; const&amp;, unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4EF4BAF</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.20</obj>
      <fn>std::string::reserve(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4EF4E39</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.20</obj>
    </frame>
    <frame>
      <ip>0x4EF4F0D</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.20</obj>
      <fn>std::string::append(char const*, unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4EABA9F</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.20</obj>
      <fn>std::basic_istream&lt;char, std::char_traits&lt;char&gt; &gt;&amp; std::getline&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;(std::basic_istream&lt;char, std::char_traits&lt;char&gt; &gt;&amp;, std::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;&amp;, char)</fn>
    </frame>
    <frame>
      <ip>0x4028DF</ip>
      <obj>/home/eduardo/Documentos/trabAED/trabAED/bin/Debug/trabAED</obj>
      <fn>readSql(std::string)</fn>
      <dir>/home/eduardo/Documentos/trabAED/trabAED</dir>
      <file>main.cpp</file>
      <line>87</line>
    </frame>
    <frame>
      <ip>0x401B2C</ip>
      <obj>/home/eduardo/Documentos/trabAED/trabAED/bin/Debug/trabAED</obj>
      <fn>main</fn>
      <dir>/home/eduardo/Documentos/trabAED/trabAED</dir>
      <file>main.cpp</file>
      <line>13</line>
    </frame>
  </stack>
</error>

<error>
  <unique>0x4</unique>
  <tid>1</tid>
  <kind>UninitCondition</kind>
  <what>Conditional jump or move depends on uninitialised value(s)</what>
  <stack>
    <frame>
      <ip>0x5154EF2</ip>
      <obj>/lib/x86_64-linux-gnu/libm-2.19.so</obj>
      <fn>__ieee754_pow_sse2</fn>
      <dir>/build/glibc-qK83Be/glibc-2.19/math/../sysdeps/ieee754/dbl-64</dir>
      <file>e_pow.c</file>
      <line>88</line>
    </frame>
    <frame>
      <ip>0x5165AAB</ip>
      <obj>/lib/x86_64-linux-gnu/libm-2.19.so</obj>
      <fn>pow</fn>
      <dir>/build/glibc-qK83Be/glibc-2.19/math</dir>
      <file>w_pow.c</file>
      <line>27</line>
    </frame>
    <frame>
      <ip>0x40533F</ip>
      <obj>/home/eduardo/Documentos/trabAED/trabAED/bin/Debug/trabAED</obj>
      <fn>Table::rabinKarp(std::string)</fn>
      <dir>/home/eduardo/Documentos/trabAED/trabAED</dir>
      <file>Table.cpp</file>
      <line>58</line>
    </frame>
    <frame>
      <ip>0x405423</ip>
      <obj>/home/eduardo/Documentos/trabAED/trabAED/bin/Debug/trabAED</obj>
      <fn>Table::insertRecord(Record*)</fn>
      <dir>/home/eduardo/Documentos/trabAED/trabAED</dir>
      <file>Table.cpp</file>
      <line>75</line>
    </frame>
    <frame>
      <ip>0x402D9A</ip>
      <obj>/home/eduardo/Documentos/trabAED/trabAED/bin/Debug/trabAED</obj>
      <fn>readSql(std::string)</fn>
      <dir>/home/eduardo/Documentos/trabAED/trabAED</dir>
      <file>main.cpp</file>
      <line>131</line>
    </frame>
    <frame>
      <ip>0x401B2C</ip>
      <obj>/home/eduardo/Documentos/trabAED/trabAED/bin/Debug/trabAED</obj>
      <fn>main</fn>
      <dir>/home/eduardo/Documentos/trabAED/trabAED</dir>
      <file>main.cpp</file>
      <line>13</line>
    </frame>
  </stack>
  <auxwhat>Uninitialised value was created by a heap allocation</auxwhat>
  <stack>
    <frame>
      <ip>0x4C29180</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>operator new(unsigned long)</fn>
      <dir>/mnt/valgrind-3.10.0/coregrind/m_replacemalloc</dir>
      <file>vg_replace_malloc.c</file>
      <line>324</line>
    </frame>
    <frame>
      <ip>0x4EF3E98</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.20</obj>
      <fn>std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x4EF4B0A</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.20</obj>
      <fn>std::string::_Rep::_M_clone(std::allocator&lt;char&gt; const&amp;, unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4EF4BAF</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.20</obj>
      <fn>std::string::reserve(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4EF4E39</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.20</obj>
    </frame>
    <frame>
      <ip>0x4EF4F0D</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.20</obj>
      <fn>std::string::append(char const*, unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4EABA9F</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.20</obj>
      <fn>std::basic_istream&lt;char, std::char_traits&lt;char&gt; &gt;&amp; std::getline&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;(std::basic_istream&lt;char, std::char_traits&lt;char&gt; &gt;&amp;, std::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;&amp;, char)</fn>
    </frame>
    <frame>
      <ip>0x4028DF</ip>
      <obj>/home/eduardo/Documentos/trabAED/trabAED/bin/Debug/trabAED</obj>
      <fn>readSql(std::string)</fn>
      <dir>/home/eduardo/Documentos/trabAED/trabAED</dir>
      <file>main.cpp</file>
      <line>87</line>
    </frame>
    <frame>
      <ip>0x401B2C</ip>
      <obj>/home/eduardo/Documentos/trabAED/trabAED/bin/Debug/trabAED</obj>
      <fn>main</fn>
      <dir>/home/eduardo/Documentos/trabAED/trabAED</dir>
      <file>main.cpp</file>
      <line>13</line>
    </frame>
  </stack>
</error>

<error>
  <unique>0x5</unique>
  <tid>1</tid>
  <kind>UninitCondition</kind>
  <what>Conditional jump or move depends on uninitialised value(s)</what>
  <stack>
    <frame>
      <ip>0x5154DF4</ip>
      <obj>/lib/x86_64-linux-gnu/libm-2.19.so</obj>
      <fn>__ieee754_pow_sse2</fn>
      <dir>/build/glibc-qK83Be/glibc-2.19/math/../sysdeps/ieee754/dbl-64</dir>
      <file>e_pow.c</file>
      <line>118</line>
    </frame>
    <frame>
      <ip>0x5165AAB</ip>
      <obj>/lib/x86_64-linux-gnu/libm-2.19.so</obj>
      <fn>pow</fn>
      <dir>/build/glibc-qK83Be/glibc-2.19/math</dir>
      <file>w_pow.c</file>
      <line>27</line>
    </frame>
    <frame>
      <ip>0x40533F</ip>
      <obj>/home/eduardo/Documentos/trabAED/trabAED/bin/Debug/trabAED</obj>
      <fn>Table::rabinKarp(std::string)</fn>
      <dir>/home/eduardo/Documentos/trabAED/trabAED</dir>
      <file>Table.cpp</file>
      <line>58</line>
    </frame>
    <frame>
      <ip>0x405423</ip>
      <obj>/home/eduardo/Documentos/trabAED/trabAED/bin/Debug/trabAED</obj>
      <fn>Table::insertRecord(Record*)</fn>
      <dir>/home/eduardo/Documentos/trabAED/trabAED</dir>
      <file>Table.cpp</file>
      <line>75</line>
    </frame>
    <frame>
      <ip>0x402D9A</ip>
      <obj>/home/eduardo/Documentos/trabAED/trabAED/bin/Debug/trabAED</obj>
      <fn>readSql(std::string)</fn>
      <dir>/home/eduardo/Documentos/trabAED/trabAED</dir>
      <file>main.cpp</file>
      <line>131</line>
    </frame>
    <frame>
      <ip>0x401B2C</ip>
      <obj>/home/eduardo/Documentos/trabAED/trabAED/bin/Debug/trabAED</obj>
      <fn>main</fn>
      <dir>/home/eduardo/Documentos/trabAED/trabAED</dir>
      <file>main.cpp</file>
      <line>13</line>
    </frame>
  </stack>
  <auxwhat>Uninitialised value was created by a heap allocation</auxwhat>
  <stack>
    <frame>
      <ip>0x4C29180</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>operator new(unsigned long)</fn>
      <dir>/mnt/valgrind-3.10.0/coregrind/m_replacemalloc</dir>
      <file>vg_replace_malloc.c</file>
      <line>324</line>
    </frame>
    <frame>
      <ip>0x4EF3E98</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.20</obj>
      <fn>std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x4EF4B0A</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.20</obj>
      <fn>std::string::_Rep::_M_clone(std::allocator&lt;char&gt; const&amp;, unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4EF4BAF</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.20</obj>
      <fn>std::string::reserve(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4EF4E39</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.20</obj>
    </frame>
    <frame>
      <ip>0x4EF4F0D</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.20</obj>
      <fn>std::string::append(char const*, unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4EABA9F</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.20</obj>
      <fn>std::basic_istream&lt;char, std::char_traits&lt;char&gt; &gt;&amp; std::getline&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;(std::basic_istream&lt;char, std::char_traits&lt;char&gt; &gt;&amp;, std::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;&amp;, char)</fn>
    </frame>
    <frame>
      <ip>0x4028DF</ip>
      <obj>/home/eduardo/Documentos/trabAED/trabAED/bin/Debug/trabAED</obj>
      <fn>readSql(std::string)</fn>
      <dir>/home/eduardo/Documentos/trabAED/trabAED</dir>
      <file>main.cpp</file>
      <line>87</line>
    </frame>
    <frame>
      <ip>0x401B2C</ip>
      <obj>/home/eduardo/Documentos/trabAED/trabAED/bin/Debug/trabAED</obj>
      <fn>main</fn>
      <dir>/home/eduardo/Documentos/trabAED/trabAED</dir>
      <file>main.cpp</file>
      <line>13</line>
    </frame>
  </stack>
</error>

<error>
  <unique>0x6</unique>
  <tid>1</tid>
  <kind>UninitCondition</kind>
  <what>Conditional jump or move depends on uninitialised value(s)</what>
  <stack>
    <frame>
      <ip>0x5154DFA</ip>
      <obj>/lib/x86_64-linux-gnu/libm-2.19.so</obj>
      <fn>__ieee754_pow_sse2</fn>
      <dir>/build/glibc-qK83Be/glibc-2.19/math/../sysdeps/ieee754/dbl-64</dir>
      <file>e_pow.c</file>
      <line>118</line>
    </frame>
    <frame>
      <ip>0x5165AAB</ip>
      <obj>/lib/x86_64-linux-gnu/libm-2.19.so</obj>
      <fn>pow</fn>
      <dir>/build/glibc-qK83Be/glibc-2.19/math</dir>
      <file>w_pow.c</file>
      <line>27</line>
    </frame>
    <frame>
      <ip>0x40533F</ip>
      <obj>/home/eduardo/Documentos/trabAED/trabAED/bin/Debug/trabAED</obj>
      <fn>Table::rabinKarp(std::string)</fn>
      <dir>/home/eduardo/Documentos/trabAED/trabAED</dir>
      <file>Table.cpp</file>
      <line>58</line>
    </frame>
    <frame>
      <ip>0x405423</ip>
      <obj>/home/eduardo/Documentos/trabAED/trabAED/bin/Debug/trabAED</obj>
      <fn>Table::insertRecord(Record*)</fn>
      <dir>/home/eduardo/Documentos/trabAED/trabAED</dir>
      <file>Table.cpp</file>
      <line>75</line>
    </frame>
    <frame>
      <ip>0x402D9A</ip>
      <obj>/home/eduardo/Documentos/trabAED/trabAED/bin/Debug/trabAED</obj>
      <fn>readSql(std::string)</fn>
      <dir>/home/eduardo/Documentos/trabAED/trabAED</dir>
      <file>main.cpp</file>
      <line>131</line>
    </frame>
    <frame>
      <ip>0x401B2C</ip>
      <obj>/home/eduardo/Documentos/trabAED/trabAED/bin/Debug/trabAED</obj>
      <fn>main</fn>
      <dir>/home/eduardo/Documentos/trabAED/trabAED</dir>
      <file>main.cpp</file>
      <line>13</line>
    </frame>
  </stack>
  <auxwhat>Uninitialised value was created by a heap allocation</auxwhat>
  <stack>
    <frame>
      <ip>0x4C29180</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>operator new(unsigned long)</fn>
      <dir>/mnt/valgrind-3.10.0/coregrind/m_replacemalloc</dir>
      <file>vg_replace_malloc.c</file>
      <line>324</line>
    </frame>
    <frame>
      <ip>0x4EF3E98</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.20</obj>
      <fn>std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x4EF4B0A</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.20</obj>
      <fn>std::string::_Rep::_M_clone(std::allocator&lt;char&gt; const&amp;, unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4EF4BAF</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.20</obj>
      <fn>std::string::reserve(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4EF4E39</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.20</obj>
    </frame>
    <frame>
      <ip>0x4EF4F0D</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.20</obj>
      <fn>std::string::append(char const*, unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4EABA9F</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.20</obj>
      <fn>std::basic_istream&lt;char, std::char_traits&lt;char&gt; &gt;&amp; std::getline&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;(std::basic_istream&lt;char, std::char_traits&lt;char&gt; &gt;&amp;, std::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;&amp;, char)</fn>
    </frame>
    <frame>
      <ip>0x4028DF</ip>
      <obj>/home/eduardo/Documentos/trabAED/trabAED/bin/Debug/trabAED</obj>
      <fn>readSql(std::string)</fn>
      <dir>/home/eduardo/Documentos/trabAED/trabAED</dir>
      <file>main.cpp</file>
      <line>87</line>
    </frame>
    <frame>
      <ip>0x401B2C</ip>
      <obj>/home/eduardo/Documentos/trabAED/trabAED/bin/Debug/trabAED</obj>
      <fn>main</fn>
      <dir>/home/eduardo/Documentos/trabAED/trabAED</dir>
      <file>main.cpp</file>
      <line>13</line>
    </frame>
  </stack>
</error>

<error>
  <unique>0x7</unique>
  <tid>1</tid>
  <kind>UninitCondition</kind>
  <what>Conditional jump or move depends on uninitialised value(s)</what>
  <stack>
    <frame>
      <ip>0x5165B3D</ip>
      <obj>/lib/x86_64-linux-gnu/libm-2.19.so</obj>
      <fn>pow</fn>
      <dir>/build/glibc-qK83Be/glibc-2.19/math</dir>
      <file>w_pow.c</file>
      <line>58</line>
    </frame>
    <frame>
      <ip>0x40533F</ip>
      <obj>/home/eduardo/Documentos/trabAED/trabAED/bin/Debug/trabAED</obj>
      <fn>Table::rabinKarp(std::string)</fn>
      <dir>/home/eduardo/Documentos/trabAED/trabAED</dir>
      <file>Table.cpp</file>
      <line>58</line>
    </frame>
    <frame>
      <ip>0x405423</ip>
      <obj>/home/eduardo/Documentos/trabAED/trabAED/bin/Debug/trabAED</obj>
      <fn>Table::insertRecord(Record*)</fn>
      <dir>/home/eduardo/Documentos/trabAED/trabAED</dir>
      <file>Table.cpp</file>
      <line>75</line>
    </frame>
    <frame>
      <ip>0x402D9A</ip>
      <obj>/home/eduardo/Documentos/trabAED/trabAED/bin/Debug/trabAED</obj>
      <fn>readSql(std::string)</fn>
      <dir>/home/eduardo/Documentos/trabAED/trabAED</dir>
      <file>main.cpp</file>
      <line>131</line>
    </frame>
    <frame>
      <ip>0x401B2C</ip>
      <obj>/home/eduardo/Documentos/trabAED/trabAED/bin/Debug/trabAED</obj>
      <fn>main</fn>
      <dir>/home/eduardo/Documentos/trabAED/trabAED</dir>
      <file>main.cpp</file>
      <line>13</line>
    </frame>
  </stack>
  <auxwhat>Uninitialised value was created by a heap allocation</auxwhat>
  <stack>
    <frame>
      <ip>0x4C29180</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>operator new(unsigned long)</fn>
      <dir>/mnt/valgrind-3.10.0/coregrind/m_replacemalloc</dir>
      <file>vg_replace_malloc.c</file>
      <line>324</line>
    </frame>
    <frame>
      <ip>0x4EF3E98</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.20</obj>
      <fn>std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x4EF4B0A</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.20</obj>
      <fn>std::string::_Rep::_M_clone(std::allocator&lt;char&gt; const&amp;, unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4EF4BAF</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.20</obj>
      <fn>std::string::reserve(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4EF4E39</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.20</obj>
    </frame>
    <frame>
      <ip>0x4EF4F0D</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.20</obj>
      <fn>std::string::append(char const*, unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4EABA9F</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.20</obj>
      <fn>std::basic_istream&lt;char, std::char_traits&lt;char&gt; &gt;&amp; std::getline&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;(std::basic_istream&lt;char, std::char_traits&lt;char&gt; &gt;&amp;, std::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;&amp;, char)</fn>
    </frame>
    <frame>
      <ip>0x4028DF</ip>
      <obj>/home/eduardo/Documentos/trabAED/trabAED/bin/Debug/trabAED</obj>
      <fn>readSql(std::string)</fn>
      <dir>/home/eduardo/Documentos/trabAED/trabAED</dir>
      <file>main.cpp</file>
      <line>87</line>
    </frame>
    <frame>
      <ip>0x401B2C</ip>
      <obj>/home/eduardo/Documentos/trabAED/trabAED/bin/Debug/trabAED</obj>
      <fn>main</fn>
      <dir>/home/eduardo/Documentos/trabAED/trabAED</dir>
      <file>main.cpp</file>
      <line>13</line>
    </frame>
  </stack>
</error>

<error>
  <unique>0x8</unique>
  <tid>1</tid>
  <kind>UninitCondition</kind>
  <what>Conditional jump or move depends on uninitialised value(s)</what>
  <stack>
    <frame>
      <ip>0x5165B5C</ip>
      <obj>/lib/x86_64-linux-gnu/libm-2.19.so</obj>
      <fn>pow</fn>
      <dir>/build/glibc-qK83Be/glibc-2.19/math</dir>
      <file>w_pow.c</file>
      <line>61</line>
    </frame>
    <frame>
      <ip>0x40533F</ip>
      <obj>/home/eduardo/Documentos/trabAED/trabAED/bin/Debug/trabAED</obj>
      <fn>Table::rabinKarp(std::string)</fn>
      <dir>/home/eduardo/Documentos/trabAED/trabAED</dir>
      <file>Table.cpp</file>
      <line>58</line>
    </frame>
    <frame>
      <ip>0x405423</ip>
      <obj>/home/eduardo/Documentos/trabAED/trabAED/bin/Debug/trabAED</obj>
      <fn>Table::insertRecord(Record*)</fn>
      <dir>/home/eduardo/Documentos/trabAED/trabAED</dir>
      <file>Table.cpp</file>
      <line>75</line>
    </frame>
    <frame>
      <ip>0x402D9A</ip>
      <obj>/home/eduardo/Documentos/trabAED/trabAED/bin/Debug/trabAED</obj>
      <fn>readSql(std::string)</fn>
      <dir>/home/eduardo/Documentos/trabAED/trabAED</dir>
      <file>main.cpp</file>
      <line>131</line>
    </frame>
    <frame>
      <ip>0x401B2C</ip>
      <obj>/home/eduardo/Documentos/trabAED/trabAED/bin/Debug/trabAED</obj>
      <fn>main</fn>
      <dir>/home/eduardo/Documentos/trabAED/trabAED</dir>
      <file>main.cpp</file>
      <line>13</line>
    </frame>
  </stack>
  <auxwhat>Uninitialised value was created by a heap allocation</auxwhat>
  <stack>
    <frame>
      <ip>0x4C29180</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>operator new(unsigned long)</fn>
      <dir>/mnt/valgrind-3.10.0/coregrind/m_replacemalloc</dir>
      <file>vg_replace_malloc.c</file>
      <line>324</line>
    </frame>
    <frame>
      <ip>0x4EF3E98</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.20</obj>
      <fn>std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x4EF4B0A</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.20</obj>
      <fn>std::string::_Rep::_M_clone(std::allocator&lt;char&gt; const&amp;, unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4EF4BAF</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.20</obj>
      <fn>std::string::reserve(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4EF4E39</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.20</obj>
    </frame>
    <frame>
      <ip>0x4EF4F0D</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.20</obj>
      <fn>std::string::append(char const*, unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4EABA9F</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.20</obj>
      <fn>std::basic_istream&lt;char, std::char_traits&lt;char&gt; &gt;&amp; std::getline&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;(std::basic_istream&lt;char, std::char_traits&lt;char&gt; &gt;&amp;, std::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;&amp;, char)</fn>
    </frame>
    <frame>
      <ip>0x4028DF</ip>
      <obj>/home/eduardo/Documentos/trabAED/trabAED/bin/Debug/trabAED</obj>
      <fn>readSql(std::string)</fn>
      <dir>/home/eduardo/Documentos/trabAED/trabAED</dir>
      <file>main.cpp</file>
      <line>87</line>
    </frame>
    <frame>
      <ip>0x401B2C</ip>
      <obj>/home/eduardo/Documentos/trabAED/trabAED/bin/Debug/trabAED</obj>
      <fn>main</fn>
      <dir>/home/eduardo/Documentos/trabAED/trabAED</dir>
      <file>main.cpp</file>
      <line>13</line>
    </frame>
  </stack>
</error>

<error>
  <unique>0x9</unique>
  <tid>1</tid>
  <kind>UninitCondition</kind>
  <what>Conditional jump or move depends on uninitialised value(s)</what>
  <stack>
    <frame>
      <ip>0x5165B62</ip>
      <obj>/lib/x86_64-linux-gnu/libm-2.19.so</obj>
      <fn>pow</fn>
      <dir>/build/glibc-qK83Be/glibc-2.19/math</dir>
      <file>w_pow.c</file>
      <line>61</line>
    </frame>
    <frame>
      <ip>0x40533F</ip>
      <obj>/home/eduardo/Documentos/trabAED/trabAED/bin/Debug/trabAED</obj>
      <fn>Table::rabinKarp(std::string)</fn>
      <dir>/home/eduardo/Documentos/trabAED/trabAED</dir>
      <file>Table.cpp</file>
      <line>58</line>
    </frame>
    <frame>
      <ip>0x405423</ip>
      <obj>/home/eduardo/Documentos/trabAED/trabAED/bin/Debug/trabAED</obj>
      <fn>Table::insertRecord(Record*)</fn>
      <dir>/home/eduardo/Documentos/trabAED/trabAED</dir>
      <file>Table.cpp</file>
      <line>75</line>
    </frame>
    <frame>
      <ip>0x402D9A</ip>
      <obj>/home/eduardo/Documentos/trabAED/trabAED/bin/Debug/trabAED</obj>
      <fn>readSql(std::string)</fn>
      <dir>/home/eduardo/Documentos/trabAED/trabAED</dir>
      <file>main.cpp</file>
      <line>131</line>
    </frame>
    <frame>
      <ip>0x401B2C</ip>
      <obj>/home/eduardo/Documentos/trabAED/trabAED/bin/Debug/trabAED</obj>
      <fn>main</fn>
      <dir>/home/eduardo/Documentos/trabAED/trabAED</dir>
      <file>main.cpp</file>
      <line>13</line>
    </frame>
  </stack>
  <auxwhat>Uninitialised value was created by a heap allocation</auxwhat>
  <stack>
    <frame>
      <ip>0x4C29180</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>operator new(unsigned long)</fn>
      <dir>/mnt/valgrind-3.10.0/coregrind/m_replacemalloc</dir>
      <file>vg_replace_malloc.c</file>
      <line>324</line>
    </frame>
    <frame>
      <ip>0x4EF3E98</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.20</obj>
      <fn>std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x4EF4B0A</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.20</obj>
      <fn>std::string::_Rep::_M_clone(std::allocator&lt;char&gt; const&amp;, unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4EF4BAF</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.20</obj>
      <fn>std::string::reserve(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4EF4E39</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.20</obj>
    </frame>
    <frame>
      <ip>0x4EF4F0D</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.20</obj>
      <fn>std::string::append(char const*, unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4EABA9F</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.20</obj>
      <fn>std::basic_istream&lt;char, std::char_traits&lt;char&gt; &gt;&amp; std::getline&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;(std::basic_istream&lt;char, std::char_traits&lt;char&gt; &gt;&amp;, std::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;&amp;, char)</fn>
    </frame>
    <frame>
      <ip>0x4028DF</ip>
      <obj>/home/eduardo/Documentos/trabAED/trabAED/bin/Debug/trabAED</obj>
      <fn>readSql(std::string)</fn>
      <dir>/home/eduardo/Documentos/trabAED/trabAED</dir>
      <file>main.cpp</file>
      <line>87</line>
    </frame>
    <frame>
      <ip>0x401B2C</ip>
      <obj>/home/eduardo/Documentos/trabAED/trabAED/bin/Debug/trabAED</obj>
      <fn>main</fn>
      <dir>/home/eduardo/Documentos/trabAED/trabAED</dir>
      <file>main.cpp</file>
      <line>13</line>
    </frame>
  </stack>
</error>

<error>
  <unique>0x11</unique>
  <tid>1</tid>
  <kind>UninitCondition</kind>
  <what>Conditional jump or move depends on uninitialised value(s)</what>
  <stack>
    <frame>
      <ip>0x5165AD6</ip>
      <obj>/lib/x86_64-linux-gnu/libm-2.19.so</obj>
      <fn>pow</fn>
      <dir>/build/glibc-qK83Be/glibc-2.19/math</dir>
      <file>w_pow.c</file>
      <line>28</line>
    </frame>
    <frame>
      <ip>0x40533F</ip>
      <obj>/home/eduardo/Documentos/trabAED/trabAED/bin/Debug/trabAED</obj>
      <fn>Table::rabinKarp(std::string)</fn>
      <dir>/home/eduardo/Documentos/trabAED/trabAED</dir>
      <file>Table.cpp</file>
      <line>58</line>
    </frame>
    <frame>
      <ip>0x405423</ip>
      <obj>/home/eduardo/Documentos/trabAED/trabAED/bin/Debug/trabAED</obj>
      <fn>Table::insertRecord(Record*)</fn>
      <dir>/home/eduardo/Documentos/trabAED/trabAED</dir>
      <file>Table.cpp</file>
      <line>75</line>
    </frame>
    <frame>
      <ip>0x402D9A</ip>
      <obj>/home/eduardo/Documentos/trabAED/trabAED/bin/Debug/trabAED</obj>
      <fn>readSql(std::string)</fn>
      <dir>/home/eduardo/Documentos/trabAED/trabAED</dir>
      <file>main.cpp</file>
      <line>131</line>
    </frame>
    <frame>
      <ip>0x401B2C</ip>
      <obj>/home/eduardo/Documentos/trabAED/trabAED/bin/Debug/trabAED</obj>
      <fn>main</fn>
      <dir>/home/eduardo/Documentos/trabAED/trabAED</dir>
      <file>main.cpp</file>
      <line>13</line>
    </frame>
  </stack>
  <auxwhat>Uninitialised value was created by a heap allocation</auxwhat>
  <stack>
    <frame>
      <ip>0x4C29180</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>operator new(unsigned long)</fn>
      <dir>/mnt/valgrind-3.10.0/coregrind/m_replacemalloc</dir>
      <file>vg_replace_malloc.c</file>
      <line>324</line>
    </frame>
    <frame>
      <ip>0x4EF3E98</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.20</obj>
      <fn>std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x4EF4B0A</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.20</obj>
      <fn>std::string::_Rep::_M_clone(std::allocator&lt;char&gt; const&amp;, unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4EF4BAF</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.20</obj>
      <fn>std::string::reserve(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4EF4E39</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.20</obj>
    </frame>
    <frame>
      <ip>0x4EF4F0D</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.20</obj>
      <fn>std::string::append(char const*, unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4EABA9F</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.20</obj>
      <fn>std::basic_istream&lt;char, std::char_traits&lt;char&gt; &gt;&amp; std::getline&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;(std::basic_istream&lt;char, std::char_traits&lt;char&gt; &gt;&amp;, std::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;&amp;, char)</fn>
    </frame>
    <frame>
      <ip>0x4028DF</ip>
      <obj>/home/eduardo/Documentos/trabAED/trabAED/bin/Debug/trabAED</obj>
      <fn>readSql(std::string)</fn>
      <dir>/home/eduardo/Documentos/trabAED/trabAED</dir>
      <file>main.cpp</file>
      <line>87</line>
    </frame>
    <frame>
      <ip>0x401B2C</ip>
      <obj>/home/eduardo/Documentos/trabAED/trabAED/bin/Debug/trabAED</obj>
      <fn>main</fn>
      <dir>/home/eduardo/Documentos/trabAED/trabAED</dir>
      <file>main.cpp</file>
      <line>13</line>
    </frame>
  </stack>
</error>

<error>
  <unique>0x12</unique>
  <tid>1</tid>
  <kind>UninitCondition</kind>
  <what>Conditional jump or move depends on uninitialised value(s)</what>
  <stack>
    <frame>
      <ip>0x5165AE0</ip>
      <obj>/lib/x86_64-linux-gnu/libm-2.19.so</obj>
      <fn>pow</fn>
      <dir>/build/glibc-qK83Be/glibc-2.19/math</dir>
      <file>w_pow.c</file>
      <line>58</line>
    </frame>
    <frame>
      <ip>0x40533F</ip>
      <obj>/home/eduardo/Documentos/trabAED/trabAED/bin/Debug/trabAED</obj>
      <fn>Table::rabinKarp(std::string)</fn>
      <dir>/home/eduardo/Documentos/trabAED/trabAED</dir>
      <file>Table.cpp</file>
      <line>58</line>
    </frame>
    <frame>
      <ip>0x405423</ip>
      <obj>/home/eduardo/Documentos/trabAED/trabAED/bin/Debug/trabAED</obj>
      <fn>Table::insertRecord(Record*)</fn>
      <dir>/home/eduardo/Documentos/trabAED/trabAED</dir>
      <file>Table.cpp</file>
      <line>75</line>
    </frame>
    <frame>
      <ip>0x402D9A</ip>
      <obj>/home/eduardo/Documentos/trabAED/trabAED/bin/Debug/trabAED</obj>
      <fn>readSql(std::string)</fn>
      <dir>/home/eduardo/Documentos/trabAED/trabAED</dir>
      <file>main.cpp</file>
      <line>131</line>
    </frame>
    <frame>
      <ip>0x401B2C</ip>
      <obj>/home/eduardo/Documentos/trabAED/trabAED/bin/Debug/trabAED</obj>
      <fn>main</fn>
      <dir>/home/eduardo/Documentos/trabAED/trabAED</dir>
      <file>main.cpp</file>
      <line>13</line>
    </frame>
  </stack>
  <auxwhat>Uninitialised value was created by a heap allocation</auxwhat>
  <stack>
    <frame>
      <ip>0x4C29180</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>operator new(unsigned long)</fn>
      <dir>/mnt/valgrind-3.10.0/coregrind/m_replacemalloc</dir>
      <file>vg_replace_malloc.c</file>
      <line>324</line>
    </frame>
    <frame>
      <ip>0x4EF3E98</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.20</obj>
      <fn>std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x4EF4B0A</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.20</obj>
      <fn>std::string::_Rep::_M_clone(std::allocator&lt;char&gt; const&amp;, unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4EF4BAF</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.20</obj>
      <fn>std::string::reserve(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4EF4E39</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.20</obj>
    </frame>
    <frame>
      <ip>0x4EF4F0D</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.20</obj>
      <fn>std::string::append(char const*, unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4EABA9F</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.20</obj>
      <fn>std::basic_istream&lt;char, std::char_traits&lt;char&gt; &gt;&amp; std::getline&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;(std::basic_istream&lt;char, std::char_traits&lt;char&gt; &gt;&amp;, std::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;&amp;, char)</fn>
    </frame>
    <frame>
      <ip>0x4028DF</ip>
      <obj>/home/eduardo/Documentos/trabAED/trabAED/bin/Debug/trabAED</obj>
      <fn>readSql(std::string)</fn>
      <dir>/home/eduardo/Documentos/trabAED/trabAED</dir>
      <file>main.cpp</file>
      <line>87</line>
    </frame>
    <frame>
      <ip>0x401B2C</ip>
      <obj>/home/eduardo/Documentos/trabAED/trabAED/bin/Debug/trabAED</obj>
      <fn>main</fn>
      <dir>/home/eduardo/Documentos/trabAED/trabAED</dir>
      <file>main.cpp</file>
      <line>13</line>
    </frame>
  </stack>
</error>

<error>
  <unique>0x13</unique>
  <tid>1</tid>
  <kind>UninitCondition</kind>
  <what>Conditional jump or move depends on uninitialised value(s)</what>
  <stack>
    <frame>
      <ip>0x5165B30</ip>
      <obj>/lib/x86_64-linux-gnu/libm-2.19.so</obj>
      <fn>pow</fn>
      <dir>/build/glibc-qK83Be/glibc-2.19/math</dir>
      <file>w_pow.c</file>
      <line>58</line>
    </frame>
    <frame>
      <ip>0x40533F</ip>
      <obj>/home/eduardo/Documentos/trabAED/trabAED/bin/Debug/trabAED</obj>
      <fn>Table::rabinKarp(std::string)</fn>
      <dir>/home/eduardo/Documentos/trabAED/trabAED</dir>
      <file>Table.cpp</file>
      <line>58</line>
    </frame>
    <frame>
      <ip>0x405423</ip>
      <obj>/home/eduardo/Documentos/trabAED/trabAED/bin/Debug/trabAED</obj>
      <fn>Table::insertRecord(Record*)</fn>
      <dir>/home/eduardo/Documentos/trabAED/trabAED</dir>
      <file>Table.cpp</file>
      <line>75</line>
    </frame>
    <frame>
      <ip>0x402D9A</ip>
      <obj>/home/eduardo/Documentos/trabAED/trabAED/bin/Debug/trabAED</obj>
      <fn>readSql(std::string)</fn>
      <dir>/home/eduardo/Documentos/trabAED/trabAED</dir>
      <file>main.cpp</file>
      <line>131</line>
    </frame>
    <frame>
      <ip>0x401B2C</ip>
      <obj>/home/eduardo/Documentos/trabAED/trabAED/bin/Debug/trabAED</obj>
      <fn>main</fn>
      <dir>/home/eduardo/Documentos/trabAED/trabAED</dir>
      <file>main.cpp</file>
      <line>13</line>
    </frame>
  </stack>
  <auxwhat>Uninitialised value was created by a heap allocation</auxwhat>
  <stack>
    <frame>
      <ip>0x4C29180</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>operator new(unsigned long)</fn>
      <dir>/mnt/valgrind-3.10.0/coregrind/m_replacemalloc</dir>
      <file>vg_replace_malloc.c</file>
      <line>324</line>
    </frame>
    <frame>
      <ip>0x4EF3E98</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.20</obj>
      <fn>std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x4EF4B0A</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.20</obj>
      <fn>std::string::_Rep::_M_clone(std::allocator&lt;char&gt; const&amp;, unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4EF4BAF</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.20</obj>
      <fn>std::string::reserve(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4EF4E39</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.20</obj>
    </frame>
    <frame>
      <ip>0x4EF4F0D</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.20</obj>
      <fn>std::string::append(char const*, unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4EABA9F</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.20</obj>
      <fn>std::basic_istream&lt;char, std::char_traits&lt;char&gt; &gt;&amp; std::getline&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;(std::basic_istream&lt;char, std::char_traits&lt;char&gt; &gt;&amp;, std::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;&amp;, char)</fn>
    </frame>
    <frame>
      <ip>0x4028DF</ip>
      <obj>/home/eduardo/Documentos/trabAED/trabAED/bin/Debug/trabAED</obj>
      <fn>readSql(std::string)</fn>
      <dir>/home/eduardo/Documentos/trabAED/trabAED</dir>
      <file>main.cpp</file>
      <line>87</line>
    </frame>
    <frame>
      <ip>0x401B2C</ip>
      <obj>/home/eduardo/Documentos/trabAED/trabAED/bin/Debug/trabAED</obj>
      <fn>main</fn>
      <dir>/home/eduardo/Documentos/trabAED/trabAED</dir>
      <file>main.cpp</file>
      <line>13</line>
    </frame>
  </stack>
</error>

<error>
  <unique>0x27</unique>
  <tid>1</tid>
  <kind>UninitValue</kind>
  <what>Use of uninitialised value of size 8</what>
  <stack>
    <frame>
      <ip>0x4EBF243</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.20</obj>
    </frame>
    <frame>
      <ip>0x4EBF36C</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.20</obj>
      <fn>std::ostreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; std::num_put&lt;char, std::ostreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; &gt;::_M_insert_int&lt;long&gt;(std::ostreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt;, std::ios_base&amp;, char, long) const</fn>
    </frame>
    <frame>
      <ip>0x4EBF8BC</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.20</obj>
      <fn>std::num_put&lt;char, std::ostreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; &gt;::do_put(std::ostreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt;, std::ios_base&amp;, char, long) const</fn>
    </frame>
    <frame>
      <ip>0x4ECC899</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.20</obj>
      <fn>std::ostream&amp; std::ostream::_M_insert&lt;long&gt;(long)</fn>
    </frame>
    <frame>
      <ip>0x405370</ip>
      <obj>/home/eduardo/Documentos/trabAED/trabAED/bin/Debug/trabAED</obj>
      <fn>Table::rabinKarp(std::string)</fn>
      <dir>/home/eduardo/Documentos/trabAED/trabAED</dir>
      <file>Table.cpp</file>
      <line>60</line>
    </frame>
    <frame>
      <ip>0x405423</ip>
      <obj>/home/eduardo/Documentos/trabAED/trabAED/bin/Debug/trabAED</obj>
      <fn>Table::insertRecord(Record*)</fn>
      <dir>/home/eduardo/Documentos/trabAED/trabAED</dir>
      <file>Table.cpp</file>
      <line>75</line>
    </frame>
    <frame>
      <ip>0x402D9A</ip>
      <obj>/home/eduardo/Documentos/trabAED/trabAED/bin/Debug/trabAED</obj>
      <fn>readSql(std::string)</fn>
      <dir>/home/eduardo/Documentos/trabAED/trabAED</dir>
      <file>main.cpp</file>
      <line>131</line>
    </frame>
    <frame>
      <ip>0x401B2C</ip>
      <obj>/home/eduardo/Documentos/trabAED/trabAED/bin/Debug/trabAED</obj>
      <fn>main</fn>
      <dir>/home/eduardo/Documentos/trabAED/trabAED</dir>
      <file>main.cpp</file>
      <line>13</line>
    </frame>
  </stack>
  <auxwhat>Uninitialised value was created by a heap allocation</auxwhat>
  <stack>
    <frame>
      <ip>0x4C29180</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>operator new(unsigned long)</fn>
      <dir>/mnt/valgrind-3.10.0/coregrind/m_replacemalloc</dir>
      <file>vg_replace_malloc.c</file>
      <line>324</line>
    </frame>
    <frame>
      <ip>0x4EF3E98</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.20</obj>
      <fn>std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x4EF4B0A</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.20</obj>
      <fn>std::string::_Rep::_M_clone(std::allocator&lt;char&gt; const&amp;, unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4EF4BAF</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.20</obj>
      <fn>std::string::reserve(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4EF4E39</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.20</obj>
    </frame>
    <frame>
      <ip>0x4EF4F0D</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.20</obj>
      <fn>std::string::append(char const*, unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4EABA9F</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.20</obj>
      <fn>std::basic_istream&lt;char, std::char_traits&lt;char&gt; &gt;&amp; std::getline&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;(std::basic_istream&lt;char, std::char_traits&lt;char&gt; &gt;&amp;, std::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;&amp;, char)</fn>
    </frame>
    <frame>
      <ip>0x4028DF</ip>
      <obj>/home/eduardo/Documentos/trabAED/trabAED/bin/Debug/trabAED</obj>
      <fn>readSql(std::string)</fn>
      <dir>/home/eduardo/Documentos/trabAED/trabAED</dir>
      <file>main.cpp</file>
      <line>87</line>
    </frame>
    <frame>
      <ip>0x401B2C</ip>
      <obj>/home/eduardo/Documentos/trabAED/trabAED/bin/Debug/trabAED</obj>
      <fn>main</fn>
      <dir>/home/eduardo/Documentos/trabAED/trabAED</dir>
      <file>main.cpp</file>
      <line>13</line>
    </frame>
  </stack>
</error>

<error>
  <unique>0x28</unique>
  <tid>1</tid>
  <kind>UninitCondition</kind>
  <what>Conditional jump or move depends on uninitialised value(s)</what>
  <stack>
    <frame>
      <ip>0x4EBF24F</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.20</obj>
    </frame>
    <frame>
      <ip>0x4EBF36C</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.20</obj>
      <fn>std::ostreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; std::num_put&lt;char, std::ostreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; &gt;::_M_insert_int&lt;long&gt;(std::ostreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt;, std::ios_base&amp;, char, long) const</fn>
    </frame>
    <frame>
      <ip>0x4EBF8BC</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.20</obj>
      <fn>std::num_put&lt;char, std::ostreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; &gt;::do_put(std::ostreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt;, std::ios_base&amp;, char, long) const</fn>
    </frame>
    <frame>
      <ip>0x4ECC899</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.20</obj>
      <fn>std::ostream&amp; std::ostream::_M_insert&lt;long&gt;(long)</fn>
    </frame>
    <frame>
      <ip>0x405370</ip>
      <obj>/home/eduardo/Documentos/trabAED/trabAED/bin/Debug/trabAED</obj>
      <fn>Table::rabinKarp(std::string)</fn>
      <dir>/home/eduardo/Documentos/trabAED/trabAED</dir>
      <file>Table.cpp</file>
      <line>60</line>
    </frame>
    <frame>
      <ip>0x405423</ip>
      <obj>/home/eduardo/Documentos/trabAED/trabAED/bin/Debug/trabAED</obj>
      <fn>Table::insertRecord(Record*)</fn>
      <dir>/home/eduardo/Documentos/trabAED/trabAED</dir>
      <file>Table.cpp</file>
      <line>75</line>
    </frame>
    <frame>
      <ip>0x402D9A</ip>
      <obj>/home/eduardo/Documentos/trabAED/trabAED/bin/Debug/trabAED</obj>
      <fn>readSql(std::string)</fn>
      <dir>/home/eduardo/Documentos/trabAED/trabAED</dir>
      <file>main.cpp</file>
      <line>131</line>
    </frame>
    <frame>
      <ip>0x401B2C</ip>
      <obj>/home/eduardo/Documentos/trabAED/trabAED/bin/Debug/trabAED</obj>
      <fn>main</fn>
      <dir>/home/eduardo/Documentos/trabAED/trabAED</dir>
      <file>main.cpp</file>
      <line>13</line>
    </frame>
  </stack>
  <auxwhat>Uninitialised value was created by a heap allocation</auxwhat>
  <stack>
    <frame>
      <ip>0x4C29180</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>operator new(unsigned long)</fn>
      <dir>/mnt/valgrind-3.10.0/coregrind/m_replacemalloc</dir>
      <file>vg_replace_malloc.c</file>
      <line>324</line>
    </frame>
    <frame>
      <ip>0x4EF3E98</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.20</obj>
      <fn>std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x4EF4B0A</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.20</obj>
      <fn>std::string::_Rep::_M_clone(std::allocator&lt;char&gt; const&amp;, unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4EF4BAF</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.20</obj>
      <fn>std::string::reserve(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4EF4E39</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.20</obj>
    </frame>
    <frame>
      <ip>0x4EF4F0D</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.20</obj>
      <fn>std::string::append(char const*, unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4EABA9F</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.20</obj>
      <fn>std::basic_istream&lt;char, std::char_traits&lt;char&gt; &gt;&amp; std::getline&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;(std::basic_istream&lt;char, std::char_traits&lt;char&gt; &gt;&amp;, std::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;&amp;, char)</fn>
    </frame>
    <frame>
      <ip>0x4028DF</ip>
      <obj>/home/eduardo/Documentos/trabAED/trabAED/bin/Debug/trabAED</obj>
      <fn>readSql(std::string)</fn>
      <dir>/home/eduardo/Documentos/trabAED/trabAED</dir>
      <file>main.cpp</file>
      <line>87</line>
    </frame>
    <frame>
      <ip>0x401B2C</ip>
      <obj>/home/eduardo/Documentos/trabAED/trabAED/bin/Debug/trabAED</obj>
      <fn>main</fn>
      <dir>/home/eduardo/Documentos/trabAED/trabAED</dir>
      <file>main.cpp</file>
      <line>13</line>
    </frame>
  </stack>
</error>

<error>
  <unique>0x3b</unique>
  <tid>1</tid>
  <kind>UninitCondition</kind>
  <what>Conditional jump or move depends on uninitialised value(s)</what>
  <stack>
    <frame>
      <ip>0x4EBF395</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.20</obj>
      <fn>std::ostreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; std::num_put&lt;char, std::ostreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; &gt;::_M_insert_int&lt;long&gt;(std::ostreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt;, std::ios_base&amp;, char, long) const</fn>
    </frame>
    <frame>
      <ip>0x4EBF8BC</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.20</obj>
      <fn>std::num_put&lt;char, std::ostreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; &gt;::do_put(std::ostreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt;, std::ios_base&amp;, char, long) const</fn>
    </frame>
    <frame>
      <ip>0x4ECC899</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.20</obj>
      <fn>std::ostream&amp; std::ostream::_M_insert&lt;long&gt;(long)</fn>
    </frame>
    <frame>
      <ip>0x405370</ip>
      <obj>/home/eduardo/Documentos/trabAED/trabAED/bin/Debug/trabAED</obj>
      <fn>Table::rabinKarp(std::string)</fn>
      <dir>/home/eduardo/Documentos/trabAED/trabAED</dir>
      <file>Table.cpp</file>
      <line>60</line>
    </frame>
    <frame>
      <ip>0x405423</ip>
      <obj>/home/eduardo/Documentos/trabAED/trabAED/bin/Debug/trabAED</obj>
      <fn>Table::insertRecord(Record*)</fn>
      <dir>/home/eduardo/Documentos/trabAED/trabAED</dir>
      <file>Table.cpp</file>
      <line>75</line>
    </frame>
    <frame>
      <ip>0x402D9A</ip>
      <obj>/home/eduardo/Documentos/trabAED/trabAED/bin/Debug/trabAED</obj>
      <fn>readSql(std::string)</fn>
      <dir>/home/eduardo/Documentos/trabAED/trabAED</dir>
      <file>main.cpp</file>
      <line>131</line>
    </frame>
    <frame>
      <ip>0x401B2C</ip>
      <obj>/home/eduardo/Documentos/trabAED/trabAED/bin/Debug/trabAED</obj>
      <fn>main</fn>
      <dir>/home/eduardo/Documentos/trabAED/trabAED</dir>
      <file>main.cpp</file>
      <line>13</line>
    </frame>
  </stack>
  <auxwhat>Uninitialised value was created by a heap allocation</auxwhat>
  <stack>
    <frame>
      <ip>0x4C29180</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>operator new(unsigned long)</fn>
      <dir>/mnt/valgrind-3.10.0/coregrind/m_replacemalloc</dir>
      <file>vg_replace_malloc.c</file>
      <line>324</line>
    </frame>
    <frame>
      <ip>0x4EF3E98</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.20</obj>
      <fn>std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x4EF4B0A</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.20</obj>
      <fn>std::string::_Rep::_M_clone(std::allocator&lt;char&gt; const&amp;, unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4EF4BAF</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.20</obj>
      <fn>std::string::reserve(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4EF4E39</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.20</obj>
    </frame>
    <frame>
      <ip>0x4EF4F0D</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.20</obj>
      <fn>std::string::append(char const*, unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4EABA9F</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.20</obj>
      <fn>std::basic_istream&lt;char, std::char_traits&lt;char&gt; &gt;&amp; std::getline&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;(std::basic_istream&lt;char, std::char_traits&lt;char&gt; &gt;&amp;, std::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;&amp;, char)</fn>
    </frame>
    <frame>
      <ip>0x4028DF</ip>
      <obj>/home/eduardo/Documentos/trabAED/trabAED/bin/Debug/trabAED</obj>
      <fn>readSql(std::string)</fn>
      <dir>/home/eduardo/Documentos/trabAED/trabAED</dir>
      <file>main.cpp</file>
      <line>87</line>
    </frame>
    <frame>
      <ip>0x401B2C</ip>
      <obj>/home/eduardo/Documentos/trabAED/trabAED/bin/Debug/trabAED</obj>
      <fn>main</fn>
      <dir>/home/eduardo/Documentos/trabAED/trabAED</dir>
      <file>main.cpp</file>
      <line>13</line>
    </frame>
  </stack>
</error>

<error>
  <unique>0x3c</unique>
  <tid>1</tid>
  <kind>UninitValue</kind>
  <what>Use of uninitialised value of size 8</what>
  <stack>
    <frame>
      <ip>0x40545A</ip>
      <obj>/home/eduardo/Documentos/trabAED/trabAED/bin/Debug/trabAED</obj>
      <fn>Table::insertRecord(Record*)</fn>
      <dir>/home/eduardo/Documentos/trabAED/trabAED</dir>
      <file>Table.cpp</file>
      <line>76</line>
    </frame>
    <frame>
      <ip>0x402D9A</ip>
      <obj>/home/eduardo/Documentos/trabAED/trabAED/bin/Debug/trabAED</obj>
      <fn>readSql(std::string)</fn>
      <dir>/home/eduardo/Documentos/trabAED/trabAED</dir>
      <file>main.cpp</file>
      <line>131</line>
    </frame>
    <frame>
      <ip>0x401B2C</ip>
      <obj>/home/eduardo/Documentos/trabAED/trabAED/bin/Debug/trabAED</obj>
      <fn>main</fn>
      <dir>/home/eduardo/Documentos/trabAED/trabAED</dir>
      <file>main.cpp</file>
      <line>13</line>
    </frame>
  </stack>
  <auxwhat>Uninitialised value was created by a heap allocation</auxwhat>
  <stack>
    <frame>
      <ip>0x4C29180</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>operator new(unsigned long)</fn>
      <dir>/mnt/valgrind-3.10.0/coregrind/m_replacemalloc</dir>
      <file>vg_replace_malloc.c</file>
      <line>324</line>
    </frame>
    <frame>
      <ip>0x4EF3E98</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.20</obj>
      <fn>std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x4EF4B0A</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.20</obj>
      <fn>std::string::_Rep::_M_clone(std::allocator&lt;char&gt; const&amp;, unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4EF4BAF</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.20</obj>
      <fn>std::string::reserve(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4EF4E39</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.20</obj>
    </frame>
    <frame>
      <ip>0x4EF4F0D</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.20</obj>
      <fn>std::string::append(char const*, unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4EABA9F</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.20</obj>
      <fn>std::basic_istream&lt;char, std::char_traits&lt;char&gt; &gt;&amp; std::getline&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;(std::basic_istream&lt;char, std::char_traits&lt;char&gt; &gt;&amp;, std::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;&amp;, char)</fn>
    </frame>
    <frame>
      <ip>0x4028DF</ip>
      <obj>/home/eduardo/Documentos/trabAED/trabAED/bin/Debug/trabAED</obj>
      <fn>readSql(std::string)</fn>
      <dir>/home/eduardo/Documentos/trabAED/trabAED</dir>
      <file>main.cpp</file>
      <line>87</line>
    </frame>
    <frame>
      <ip>0x401B2C</ip>
      <obj>/home/eduardo/Documentos/trabAED/trabAED/bin/Debug/trabAED</obj>
      <fn>main</fn>
      <dir>/home/eduardo/Documentos/trabAED/trabAED</dir>
      <file>main.cpp</file>
      <line>13</line>
    </frame>
  </stack>
</error>

<error>
  <unique>0x3d</unique>
  <tid>1</tid>
  <kind>UninitCondition</kind>
  <what>Conditional jump or move depends on uninitialised value(s)</what>
  <stack>
    <frame>
      <ip>0x405460</ip>
      <obj>/home/eduardo/Documentos/trabAED/trabAED/bin/Debug/trabAED</obj>
      <fn>Table::insertRecord(Record*)</fn>
      <dir>/home/eduardo/Documentos/trabAED/trabAED</dir>
      <file>Table.cpp</file>
      <line>76</line>
    </frame>
    <frame>
      <ip>0x402D9A</ip>
      <obj>/home/eduardo/Documentos/trabAED/trabAED/bin/Debug/trabAED</obj>
      <fn>readSql(std::string)</fn>
      <dir>/home/eduardo/Documentos/trabAED/trabAED</dir>
      <file>main.cpp</file>
      <line>131</line>
    </frame>
    <frame>
      <ip>0x401B2C</ip>
      <obj>/home/eduardo/Documentos/trabAED/trabAED/bin/Debug/trabAED</obj>
      <fn>main</fn>
      <dir>/home/eduardo/Documentos/trabAED/trabAED</dir>
      <file>main.cpp</file>
      <line>13</line>
    </frame>
  </stack>
  <auxwhat>Uninitialised value was created by a heap allocation</auxwhat>
  <stack>
    <frame>
      <ip>0x4C298A0</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>operator new[](unsigned long)</fn>
      <dir>/mnt/valgrind-3.10.0/coregrind/m_replacemalloc</dir>
      <file>vg_replace_malloc.c</file>
      <line>389</line>
    </frame>
    <frame>
      <ip>0x4056F6</ip>
      <obj>/home/eduardo/Documentos/trabAED/trabAED/bin/Debug/trabAED</obj>
      <fn>Table::Table(std::string, std::vector&lt;std::string, std::allocator&lt;std::string&gt; &gt;)</fn>
      <dir>/home/eduardo/Documentos/trabAED/trabAED</dir>
      <file>Table.cpp</file>
      <line>117</line>
    </frame>
    <frame>
      <ip>0x402A95</ip>
      <obj>/home/eduardo/Documentos/trabAED/trabAED/bin/Debug/trabAED</obj>
      <fn>readSql(std::string)</fn>
      <dir>/home/eduardo/Documentos/trabAED/trabAED</dir>
      <file>main.cpp</file>
      <line>100</line>
    </frame>
    <frame>
      <ip>0x401B2C</ip>
      <obj>/home/eduardo/Documentos/trabAED/trabAED/bin/Debug/trabAED</obj>
      <fn>main</fn>
      <dir>/home/eduardo/Documentos/trabAED/trabAED</dir>
      <file>main.cpp</file>
      <line>13</line>
    </frame>
  </stack>
</error>

<error>
  <unique>0x3e</unique>
  <tid>1</tid>
  <kind>UninitValue</kind>
  <what>Use of uninitialised value of size 8</what>
  <stack>
    <frame>
      <ip>0x40548C</ip>
      <obj>/home/eduardo/Documentos/trabAED/trabAED/bin/Debug/trabAED</obj>
      <fn>Table::insertRecord(Record*)</fn>
      <dir>/home/eduardo/Documentos/trabAED/trabAED</dir>
      <file>Table.cpp</file>
      <line>79</line>
    </frame>
    <frame>
      <ip>0x402D9A</ip>
      <obj>/home/eduardo/Documentos/trabAED/trabAED/bin/Debug/trabAED</obj>
      <fn>readSql(std::string)</fn>
      <dir>/home/eduardo/Documentos/trabAED/trabAED</dir>
      <file>main.cpp</file>
      <line>131</line>
    </frame>
    <frame>
      <ip>0x401B2C</ip>
      <obj>/home/eduardo/Documentos/trabAED/trabAED/bin/Debug/trabAED</obj>
      <fn>main</fn>
      <dir>/home/eduardo/Documentos/trabAED/trabAED</dir>
      <file>main.cpp</file>
      <line>13</line>
    </frame>
  </stack>
  <auxwhat>Uninitialised value was created by a heap allocation</auxwhat>
  <stack>
    <frame>
      <ip>0x4C29180</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>operator new(unsigned long)</fn>
      <dir>/mnt/valgrind-3.10.0/coregrind/m_replacemalloc</dir>
      <file>vg_replace_malloc.c</file>
      <line>324</line>
    </frame>
    <frame>
      <ip>0x4EF3E98</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.20</obj>
      <fn>std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x4EF4B0A</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.20</obj>
      <fn>std::string::_Rep::_M_clone(std::allocator&lt;char&gt; const&amp;, unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4EF4BAF</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.20</obj>
      <fn>std::string::reserve(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4EF4E39</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.20</obj>
    </frame>
    <frame>
      <ip>0x4EF4F0D</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.20</obj>
      <fn>std::string::append(char const*, unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4EABA9F</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.20</obj>
      <fn>std::basic_istream&lt;char, std::char_traits&lt;char&gt; &gt;&amp; std::getline&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;(std::basic_istream&lt;char, std::char_traits&lt;char&gt; &gt;&amp;, std::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;&amp;, char)</fn>
    </frame>
    <frame>
      <ip>0x4028DF</ip>
      <obj>/home/eduardo/Documentos/trabAED/trabAED/bin/Debug/trabAED</obj>
      <fn>readSql(std::string)</fn>
      <dir>/home/eduardo/Documentos/trabAED/trabAED</dir>
      <file>main.cpp</file>
      <line>87</line>
    </frame>
    <frame>
      <ip>0x401B2C</ip>
      <obj>/home/eduardo/Documentos/trabAED/trabAED/bin/Debug/trabAED</obj>
      <fn>main</fn>
      <dir>/home/eduardo/Documentos/trabAED/trabAED</dir>
      <file>main.cpp</file>
      <line>13</line>
    </frame>
  </stack>
</error>

<error>
  <unique>0x7c</unique>
  <tid>1</tid>
  <kind>UninitValue</kind>
  <what>Use of uninitialised value of size 8</what>
  <stack>
    <frame>
      <ip>0x4054A6</ip>
      <obj>/home/eduardo/Documentos/trabAED/trabAED/bin/Debug/trabAED</obj>
      <fn>Table::insertRecord(Record*)</fn>
      <dir>/home/eduardo/Documentos/trabAED/trabAED</dir>
      <file>Table.cpp</file>
      <line>81</line>
    </frame>
    <frame>
      <ip>0x402D9A</ip>
      <obj>/home/eduardo/Documentos/trabAED/trabAED/bin/Debug/trabAED</obj>
      <fn>readSql(std::string)</fn>
      <dir>/home/eduardo/Documentos/trabAED/trabAED</dir>
      <file>main.cpp</file>
      <line>131</line>
    </frame>
    <frame>
      <ip>0x401B2C</ip>
      <obj>/home/eduardo/Documentos/trabAED/trabAED/bin/Debug/trabAED</obj>
      <fn>main</fn>
      <dir>/home/eduardo/Documentos/trabAED/trabAED</dir>
      <file>main.cpp</file>
      <line>13</line>
    </frame>
  </stack>
  <auxwhat>Uninitialised value was created by a heap allocation</auxwhat>
  <stack>
    <frame>
      <ip>0x4C29180</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>operator new(unsigned long)</fn>
      <dir>/mnt/valgrind-3.10.0/coregrind/m_replacemalloc</dir>
      <file>vg_replace_malloc.c</file>
      <line>324</line>
    </frame>
    <frame>
      <ip>0x4EF3E98</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.20</obj>
      <fn>std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x4EF4B0A</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.20</obj>
      <fn>std::string::_Rep::_M_clone(std::allocator&lt;char&gt; const&amp;, unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4EF4BAF</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.20</obj>
      <fn>std::string::reserve(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4EF4E39</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.20</obj>
    </frame>
    <frame>
      <ip>0x4EF4F0D</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.20</obj>
      <fn>std::string::append(char const*, unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4EABA9F</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.20</obj>
      <fn>std::basic_istream&lt;char, std::char_traits&lt;char&gt; &gt;&amp; std::getline&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;(std::basic_istream&lt;char, std::char_traits&lt;char&gt; &gt;&amp;, std::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;&amp;, char)</fn>
    </frame>
    <frame>
      <ip>0x402C6A</ip>
      <obj>/home/eduardo/Documentos/trabAED/trabAED/bin/Debug/trabAED</obj>
      <fn>readSql(std::string)</fn>
      <dir>/home/eduardo/Documentos/trabAED/trabAED</dir>
      <file>main.cpp</file>
      <line>111</line>
    </frame>
    <frame>
      <ip>0x401B2C</ip>
      <obj>/home/eduardo/Documentos/trabAED/trabAED/bin/Debug/trabAED</obj>
      <fn>main</fn>
      <dir>/home/eduardo/Documentos/trabAED/trabAED</dir>
      <file>main.cpp</file>
      <line>13</line>
    </frame>
  </stack>
</error>

<error>
  <unique>0x2418</unique>
  <tid>1</tid>
  <kind>InvalidRead</kind>
  <what>Invalid read of size 8</what>
  <stack>
    <frame>
      <ip>0x404B4A</ip>
      <obj>/home/eduardo/Documentos/trabAED/trabAED/bin/Debug/trabAED</obj>
      <fn>Record::getNext()</fn>
      <dir>/home/eduardo/Documentos/trabAED/trabAED</dir>
      <file>Record.cpp</file>
      <line>20</line>
    </frame>
    <frame>
      <ip>0x405687</ip>
      <obj>/home/eduardo/Documentos/trabAED/trabAED/bin/Debug/trabAED</obj>
      <fn>Table::insertAux(Record*, Record*)</fn>
      <dir>/home/eduardo/Documentos/trabAED/trabAED</dir>
      <file>Table.cpp</file>
      <line>107</line>
    </frame>
    <frame>
      <ip>0x4054BB</ip>
      <obj>/home/eduardo/Documentos/trabAED/trabAED/bin/Debug/trabAED</obj>
      <fn>Table::insertRecord(Record*)</fn>
      <dir>/home/eduardo/Documentos/trabAED/trabAED</dir>
      <file>Table.cpp</file>
      <line>81</line>
    </frame>
    <frame>
      <ip>0x402D9A</ip>
      <obj>/home/eduardo/Documentos/trabAED/trabAED/bin/Debug/trabAED</obj>
      <fn>readSql(std::string)</fn>
      <dir>/home/eduardo/Documentos/trabAED/trabAED</dir>
      <file>main.cpp</file>
      <line>131</line>
    </frame>
    <frame>
      <ip>0x401B2C</ip>
      <obj>/home/eduardo/Documentos/trabAED/trabAED/bin/Debug/trabAED</obj>
      <fn>main</fn>
      <dir>/home/eduardo/Documentos/trabAED/trabAED</dir>
      <file>main.cpp</file>
      <line>13</line>
    </frame>
  </stack>
  <auxwhat>Address 0x20746e656972748d is not stack'd, malloc'd or (recently) free'd</auxwhat>
</error>


<status>
  <state>FINISHED</state>
  <time>00:00:00:01.376 </time>
</status>

<error>
  <unique>0x241a</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>33 bytes in 1 blocks are possibly lost in loss record 2 of 23</text>
    <leakedbytes>33</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C29180</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>operator new(unsigned long)</fn>
      <dir>/mnt/valgrind-3.10.0/coregrind/m_replacemalloc</dir>
      <file>vg_replace_malloc.c</file>
      <line>324</line>
    </frame>
    <frame>
      <ip>0x4EF3E98</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.20</obj>
      <fn>std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x4EF4B0A</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.20</obj>
      <fn>std::string::_Rep::_M_clone(std::allocator&lt;char&gt; const&amp;, unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4EF4BAF</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.20</obj>
      <fn>std::string::reserve(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4EF4E39</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.20</obj>
    </frame>
    <frame>
      <ip>0x4EF4F0D</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.20</obj>
      <fn>std::string::append(char const*, unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4EABA9F</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.20</obj>
      <fn>std::basic_istream&lt;char, std::char_traits&lt;char&gt; &gt;&amp; std::getline&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;(std::basic_istream&lt;char, std::char_traits&lt;char&gt; &gt;&amp;, std::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;&amp;, char)</fn>
    </frame>
    <frame>
      <ip>0x4027DD</ip>
      <obj>/home/eduardo/Documentos/trabAED/trabAED/bin/Debug/trabAED</obj>
      <fn>readSql(std::string)</fn>
      <dir>/home/eduardo/Documentos/trabAED/trabAED</dir>
      <file>main.cpp</file>
      <line>78</line>
    </frame>
    <frame>
      <ip>0x401B2C</ip>
      <obj>/home/eduardo/Documentos/trabAED/trabAED/bin/Debug/trabAED</obj>
      <fn>main</fn>
      <dir>/home/eduardo/Documentos/trabAED/trabAED</dir>
      <file>main.cpp</file>
      <line>13</line>
    </frame>
  </stack>
</error>

<error>
  <unique>0x241c</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>71 bytes in 1 blocks are possibly lost in loss record 4 of 23</text>
    <leakedbytes>71</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C29180</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>operator new(unsigned long)</fn>
      <dir>/mnt/valgrind-3.10.0/coregrind/m_replacemalloc</dir>
      <file>vg_replace_malloc.c</file>
      <line>324</line>
    </frame>
    <frame>
      <ip>0x4EF3E98</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.20</obj>
      <fn>std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x4EF5814</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.20</obj>
      <fn>char* std::string::_S_construct&lt;char const*&gt;(char const*, char const*, std::allocator&lt;char&gt; const&amp;, std::forward_iterator_tag)</fn>
    </frame>
    <frame>
      <ip>0x4EF5C45</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.20</obj>
      <fn>std::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string(char const*, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x401B1D</ip>
      <obj>/home/eduardo/Documentos/trabAED/trabAED/bin/Debug/trabAED</obj>
      <fn>main</fn>
      <dir>/home/eduardo/Documentos/trabAED/trabAED</dir>
      <file>main.cpp</file>
      <line>13</line>
    </frame>
  </stack>
</error>

<error>
  <unique>0x241f</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>104 bytes in 4 blocks are possibly lost in loss record 7 of 23</text>
    <leakedbytes>104</leakedbytes>
    <leakedblocks>4</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C29180</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>operator new(unsigned long)</fn>
      <dir>/mnt/valgrind-3.10.0/coregrind/m_replacemalloc</dir>
      <file>vg_replace_malloc.c</file>
      <line>324</line>
    </frame>
    <frame>
      <ip>0x4EF3E98</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.20</obj>
      <fn>std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x4EF4B0A</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.20</obj>
      <fn>std::string::_Rep::_M_clone(std::allocator&lt;char&gt; const&amp;, unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4EF4BAF</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.20</obj>
      <fn>std::string::reserve(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4EABB36</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.20</obj>
      <fn>std::basic_istream&lt;char, std::char_traits&lt;char&gt; &gt;&amp; std::getline&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;(std::basic_istream&lt;char, std::char_traits&lt;char&gt; &gt;&amp;, std::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;&amp;, char)</fn>
    </frame>
    <frame>
      <ip>0x402C6A</ip>
      <obj>/home/eduardo/Documentos/trabAED/trabAED/bin/Debug/trabAED</obj>
      <fn>readSql(std::string)</fn>
      <dir>/home/eduardo/Documentos/trabAED/trabAED</dir>
      <file>main.cpp</file>
      <line>111</line>
    </frame>
    <frame>
      <ip>0x401B2C</ip>
      <obj>/home/eduardo/Documentos/trabAED/trabAED/bin/Debug/trabAED</obj>
      <fn>main</fn>
      <dir>/home/eduardo/Documentos/trabAED/trabAED</dir>
      <file>main.cpp</file>
      <line>13</line>
    </frame>
  </stack>
</error>

<error>
  <unique>0x2420</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>113 bytes in 1 blocks are possibly lost in loss record 8 of 23</text>
    <leakedbytes>113</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C29180</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>operator new(unsigned long)</fn>
      <dir>/mnt/valgrind-3.10.0/coregrind/m_replacemalloc</dir>
      <file>vg_replace_malloc.c</file>
      <line>324</line>
    </frame>
    <frame>
      <ip>0x4EF3E98</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.20</obj>
      <fn>std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x4EF4B0A</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.20</obj>
      <fn>std::string::_Rep::_M_clone(std::allocator&lt;char&gt; const&amp;, unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4EF4BAF</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.20</obj>
      <fn>std::string::reserve(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4EF4E39</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.20</obj>
    </frame>
    <frame>
      <ip>0x4EF4F0D</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.20</obj>
      <fn>std::string::append(char const*, unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4EABA9F</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.20</obj>
      <fn>std::basic_istream&lt;char, std::char_traits&lt;char&gt; &gt;&amp; std::getline&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;(std::basic_istream&lt;char, std::char_traits&lt;char&gt; &gt;&amp;, std::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;&amp;, char)</fn>
    </frame>
    <frame>
      <ip>0x4028DF</ip>
      <obj>/home/eduardo/Documentos/trabAED/trabAED/bin/Debug/trabAED</obj>
      <fn>readSql(std::string)</fn>
      <dir>/home/eduardo/Documentos/trabAED/trabAED</dir>
      <file>main.cpp</file>
      <line>87</line>
    </frame>
    <frame>
      <ip>0x401B2C</ip>
      <obj>/home/eduardo/Documentos/trabAED/trabAED/bin/Debug/trabAED</obj>
      <fn>main</fn>
      <dir>/home/eduardo/Documentos/trabAED/trabAED</dir>
      <file>main.cpp</file>
      <line>13</line>
    </frame>
  </stack>
</error>

<error>
  <unique>0x2421</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>126 bytes in 1 blocks are possibly lost in loss record 9 of 23</text>
    <leakedbytes>126</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C29180</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>operator new(unsigned long)</fn>
      <dir>/mnt/valgrind-3.10.0/coregrind/m_replacemalloc</dir>
      <file>vg_replace_malloc.c</file>
      <line>324</line>
    </frame>
    <frame>
      <ip>0x4EF3E98</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.20</obj>
      <fn>std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x4EF4B0A</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.20</obj>
      <fn>std::string::_Rep::_M_clone(std::allocator&lt;char&gt; const&amp;, unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4EF4BAF</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.20</obj>
      <fn>std::string::reserve(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4EF4E39</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.20</obj>
    </frame>
    <frame>
      <ip>0x4EF4F0D</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.20</obj>
      <fn>std::string::append(char const*, unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4EABA9F</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.20</obj>
      <fn>std::basic_istream&lt;char, std::char_traits&lt;char&gt; &gt;&amp; std::getline&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;(std::basic_istream&lt;char, std::char_traits&lt;char&gt; &gt;&amp;, std::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;&amp;, char)</fn>
    </frame>
    <frame>
      <ip>0x4026C7</ip>
      <obj>/home/eduardo/Documentos/trabAED/trabAED/bin/Debug/trabAED</obj>
      <fn>readSql(std::string)</fn>
      <dir>/home/eduardo/Documentos/trabAED/trabAED</dir>
      <file>main.cpp</file>
      <line>68</line>
    </frame>
    <frame>
      <ip>0x401B2C</ip>
      <obj>/home/eduardo/Documentos/trabAED/trabAED/bin/Debug/trabAED</obj>
      <fn>main</fn>
      <dir>/home/eduardo/Documentos/trabAED/trabAED</dir>
      <file>main.cpp</file>
      <line>13</line>
    </frame>
  </stack>
</error>

<error>
  <unique>0x2424</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>135 bytes in 4 blocks are possibly lost in loss record 12 of 23</text>
    <leakedbytes>135</leakedbytes>
    <leakedblocks>4</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C29180</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>operator new(unsigned long)</fn>
      <dir>/mnt/valgrind-3.10.0/coregrind/m_replacemalloc</dir>
      <file>vg_replace_malloc.c</file>
      <line>324</line>
    </frame>
    <frame>
      <ip>0x4EF3E98</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.20</obj>
      <fn>std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x4EF4B0A</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.20</obj>
      <fn>std::string::_Rep::_M_clone(std::allocator&lt;char&gt; const&amp;, unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4EF529B</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.20</obj>
      <fn>std::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string(std::string const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x403CC0</ip>
      <obj>/home/eduardo/Documentos/trabAED/trabAED/bin/Debug/trabAED</obj>
      <fn>__gnu_cxx::new_allocator&lt;std::string&gt;::construct(std::string*, std::string const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x403565</ip>
      <obj>/home/eduardo/Documentos/trabAED/trabAED/bin/Debug/trabAED</obj>
      <fn>void __gnu_cxx::__alloc_traits&lt;std::allocator&lt;std::string&gt; &gt;::construct&lt;std::string&gt;(std::allocator&lt;std::string&gt;&amp;, std::string*, std::string const&amp;)</fn>
      <dir>/usr/include/c++/4.9/ext</dir>
      <file>alloc_traits.h</file>
      <line>189</line>
    </frame>
    <frame>
      <ip>0x403203</ip>
      <obj>/home/eduardo/Documentos/trabAED/trabAED/bin/Debug/trabAED</obj>
      <fn>std::vector&lt;std::string, std::allocator&lt;std::string&gt; &gt;::push_back(std::string const&amp;)</fn>
      <dir>/usr/include/c++/4.9/bits</dir>
      <file>stl_vector.h</file>
      <line>917</line>
    </frame>
    <frame>
      <ip>0x4029F9</ip>
      <obj>/home/eduardo/Documentos/trabAED/trabAED/bin/Debug/trabAED</obj>
      <fn>readSql(std::string)</fn>
      <dir>/home/eduardo/Documentos/trabAED/trabAED</dir>
      <file>main.cpp</file>
      <line>97</line>
    </frame>
    <frame>
      <ip>0x401B2C</ip>
      <obj>/home/eduardo/Documentos/trabAED/trabAED/bin/Debug/trabAED</obj>
      <fn>main</fn>
      <dir>/home/eduardo/Documentos/trabAED/trabAED</dir>
      <file>main.cpp</file>
      <line>13</line>
    </frame>
  </stack>
</error>

<error>
  <unique>0x2425</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>162 bytes in 5 blocks are possibly lost in loss record 13 of 23</text>
    <leakedbytes>162</leakedbytes>
    <leakedblocks>5</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C29180</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>operator new(unsigned long)</fn>
      <dir>/mnt/valgrind-3.10.0/coregrind/m_replacemalloc</dir>
      <file>vg_replace_malloc.c</file>
      <line>324</line>
    </frame>
    <frame>
      <ip>0x4EF3E98</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.20</obj>
      <fn>std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x4EF4B0A</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.20</obj>
      <fn>std::string::_Rep::_M_clone(std::allocator&lt;char&gt; const&amp;, unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4EF529B</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.20</obj>
      <fn>std::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string(std::string const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x403CC0</ip>
      <obj>/home/eduardo/Documentos/trabAED/trabAED/bin/Debug/trabAED</obj>
      <fn>__gnu_cxx::new_allocator&lt;std::string&gt;::construct(std::string*, std::string const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x403565</ip>
      <obj>/home/eduardo/Documentos/trabAED/trabAED/bin/Debug/trabAED</obj>
      <fn>void __gnu_cxx::__alloc_traits&lt;std::allocator&lt;std::string&gt; &gt;::construct&lt;std::string&gt;(std::allocator&lt;std::string&gt;&amp;, std::string*, std::string const&amp;)</fn>
      <dir>/usr/include/c++/4.9/ext</dir>
      <file>alloc_traits.h</file>
      <line>189</line>
    </frame>
    <frame>
      <ip>0x4036CC</ip>
      <obj>/home/eduardo/Documentos/trabAED/trabAED/bin/Debug/trabAED</obj>
      <fn>std::vector&lt;std::string, std::allocator&lt;std::string&gt; &gt;::_M_insert_aux(__gnu_cxx::__normal_iterator&lt;std::string*, std::vector&lt;std::string, std::allocator&lt;std::string&gt; &gt; &gt;, std::string const&amp;)</fn>
      <dir>/usr/include/c++/4.9/bits</dir>
      <file>vector.tcc</file>
      <line>361</line>
    </frame>
    <frame>
      <ip>0x40323B</ip>
      <obj>/home/eduardo/Documentos/trabAED/trabAED/bin/Debug/trabAED</obj>
      <fn>std::vector&lt;std::string, std::allocator&lt;std::string&gt; &gt;::push_back(std::string const&amp;)</fn>
      <dir>/usr/include/c++/4.9/bits</dir>
      <file>stl_vector.h</file>
      <line>925</line>
    </frame>
    <frame>
      <ip>0x4029F9</ip>
      <obj>/home/eduardo/Documentos/trabAED/trabAED/bin/Debug/trabAED</obj>
      <fn>readSql(std::string)</fn>
      <dir>/home/eduardo/Documentos/trabAED/trabAED</dir>
      <file>main.cpp</file>
      <line>97</line>
    </frame>
    <frame>
      <ip>0x401B2C</ip>
      <obj>/home/eduardo/Documentos/trabAED/trabAED/bin/Debug/trabAED</obj>
      <fn>main</fn>
      <dir>/home/eduardo/Documentos/trabAED/trabAED</dir>
      <file>main.cpp</file>
      <line>13</line>
    </frame>
  </stack>
</error>

<error>
  <unique>0x2426</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>225 bytes in 1 blocks are possibly lost in loss record 14 of 23</text>
    <leakedbytes>225</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C29180</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>operator new(unsigned long)</fn>
      <dir>/mnt/valgrind-3.10.0/coregrind/m_replacemalloc</dir>
      <file>vg_replace_malloc.c</file>
      <line>324</line>
    </frame>
    <frame>
      <ip>0x4EF3E98</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.20</obj>
      <fn>std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x4EF4B0A</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.20</obj>
      <fn>std::string::_Rep::_M_clone(std::allocator&lt;char&gt; const&amp;, unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4EF4BAF</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.20</obj>
      <fn>std::string::reserve(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4EF4E39</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.20</obj>
    </frame>
    <frame>
      <ip>0x4EF4F0D</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.20</obj>
      <fn>std::string::append(char const*, unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4EABA9F</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.20</obj>
      <fn>std::basic_istream&lt;char, std::char_traits&lt;char&gt; &gt;&amp; std::getline&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;(std::basic_istream&lt;char, std::char_traits&lt;char&gt; &gt;&amp;, std::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;&amp;, char)</fn>
    </frame>
    <frame>
      <ip>0x4025C1</ip>
      <obj>/home/eduardo/Documentos/trabAED/trabAED/bin/Debug/trabAED</obj>
      <fn>readSql(std::string)</fn>
      <dir>/home/eduardo/Documentos/trabAED/trabAED</dir>
      <file>main.cpp</file>
      <line>56</line>
    </frame>
    <frame>
      <ip>0x401B2C</ip>
      <obj>/home/eduardo/Documentos/trabAED/trabAED/bin/Debug/trabAED</obj>
      <fn>main</fn>
      <dir>/home/eduardo/Documentos/trabAED/trabAED</dir>
      <file>main.cpp</file>
      <line>13</line>
    </frame>
  </stack>
</error>

<error>
  <unique>0x2427</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>489 bytes in 1 blocks are possibly lost in loss record 15 of 23</text>
    <leakedbytes>489</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C29180</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>operator new(unsigned long)</fn>
      <dir>/mnt/valgrind-3.10.0/coregrind/m_replacemalloc</dir>
      <file>vg_replace_malloc.c</file>
      <line>324</line>
    </frame>
    <frame>
      <ip>0x4EF3E98</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.20</obj>
      <fn>std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x4EF3F13</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.20</obj>
      <fn>std::string::_M_mutate(unsigned long, unsigned long, unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4EF452D</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.20</obj>
      <fn>std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4ED2B1C</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.20</obj>
      <fn>std::basic_stringstream&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::str(std::string const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x402BA1</ip>
      <obj>/home/eduardo/Documentos/trabAED/trabAED/bin/Debug/trabAED</obj>
      <fn>readSql(std::string)</fn>
      <dir>/home/eduardo/Documentos/trabAED/trabAED</dir>
      <file>main.cpp</file>
      <line>109</line>
    </frame>
    <frame>
      <ip>0x401B2C</ip>
      <obj>/home/eduardo/Documentos/trabAED/trabAED/bin/Debug/trabAED</obj>
      <fn>main</fn>
      <dir>/home/eduardo/Documentos/trabAED/trabAED</dir>
      <file>main.cpp</file>
      <line>13</line>
    </frame>
  </stack>
</error>

<error>
  <unique>0x2428</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>521 bytes in 1 blocks are possibly lost in loss record 16 of 23</text>
    <leakedbytes>521</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C29180</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>operator new(unsigned long)</fn>
      <dir>/mnt/valgrind-3.10.0/coregrind/m_replacemalloc</dir>
      <file>vg_replace_malloc.c</file>
      <line>324</line>
    </frame>
    <frame>
      <ip>0x4EF3E98</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.20</obj>
      <fn>std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x4EF4B0A</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.20</obj>
      <fn>std::string::_Rep::_M_clone(std::allocator&lt;char&gt; const&amp;, unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4EF4BAF</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.20</obj>
      <fn>std::string::reserve(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4EF4E39</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.20</obj>
    </frame>
    <frame>
      <ip>0x4EF4F0D</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.20</obj>
      <fn>std::string::append(char const*, unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4EABA9F</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.20</obj>
      <fn>std::basic_istream&lt;char, std::char_traits&lt;char&gt; &gt;&amp; std::getline&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;(std::basic_istream&lt;char, std::char_traits&lt;char&gt; &gt;&amp;, std::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;&amp;, char)</fn>
    </frame>
    <frame>
      <ip>0x402DDC</ip>
      <obj>/home/eduardo/Documentos/trabAED/trabAED/bin/Debug/trabAED</obj>
      <fn>readSql(std::string)</fn>
      <dir>/home/eduardo/Documentos/trabAED/trabAED</dir>
      <file>main.cpp</file>
      <line>133</line>
    </frame>
    <frame>
      <ip>0x401B2C</ip>
      <obj>/home/eduardo/Documentos/trabAED/trabAED/bin/Debug/trabAED</obj>
      <fn>main</fn>
      <dir>/home/eduardo/Documentos/trabAED/trabAED</dir>
      <file>main.cpp</file>
      <line>13</line>
    </frame>
  </stack>
</error>

<error>
  <unique>0x242a</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>3,350 bytes in 134 blocks are possibly lost in loss record 18 of 23</text>
    <leakedbytes>3350</leakedbytes>
    <leakedblocks>134</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C29180</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>operator new(unsigned long)</fn>
      <dir>/mnt/valgrind-3.10.0/coregrind/m_replacemalloc</dir>
      <file>vg_replace_malloc.c</file>
      <line>324</line>
    </frame>
    <frame>
      <ip>0x4EF3E98</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.20</obj>
      <fn>std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x4EF3F13</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.20</obj>
      <fn>std::string::_M_mutate(unsigned long, unsigned long, unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4EAB9FB</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.20</obj>
      <fn>std::basic_istream&lt;char, std::char_traits&lt;char&gt; &gt;&amp; std::getline&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;(std::basic_istream&lt;char, std::char_traits&lt;char&gt; &gt;&amp;, std::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;&amp;, char)</fn>
    </frame>
    <frame>
      <ip>0x402C6A</ip>
      <obj>/home/eduardo/Documentos/trabAED/trabAED/bin/Debug/trabAED</obj>
      <fn>readSql(std::string)</fn>
      <dir>/home/eduardo/Documentos/trabAED/trabAED</dir>
      <file>main.cpp</file>
      <line>111</line>
    </frame>
    <frame>
      <ip>0x401B2C</ip>
      <obj>/home/eduardo/Documentos/trabAED/trabAED/bin/Debug/trabAED</obj>
      <fn>main</fn>
      <dir>/home/eduardo/Documentos/trabAED/trabAED</dir>
      <file>main.cpp</file>
      <line>13</line>
    </frame>
  </stack>
</error>

<error>
  <unique>0x242f</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>52,580 bytes in 1,176 blocks are possibly lost in loss record 23 of 23</text>
    <leakedbytes>52580</leakedbytes>
    <leakedblocks>1176</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C29180</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>operator new(unsigned long)</fn>
      <dir>/mnt/valgrind-3.10.0/coregrind/m_replacemalloc</dir>
      <file>vg_replace_malloc.c</file>
      <line>324</line>
    </frame>
    <frame>
      <ip>0x4EF3E98</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.20</obj>
      <fn>std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x4EF4B0A</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.20</obj>
      <fn>std::string::_Rep::_M_clone(std::allocator&lt;char&gt; const&amp;, unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4EF4BAF</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.20</obj>
      <fn>std::string::reserve(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4EF4E39</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.20</obj>
    </frame>
    <frame>
      <ip>0x4EF4F0D</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.20</obj>
      <fn>std::string::append(char const*, unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4EABA9F</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.20</obj>
      <fn>std::basic_istream&lt;char, std::char_traits&lt;char&gt; &gt;&amp; std::getline&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;(std::basic_istream&lt;char, std::char_traits&lt;char&gt; &gt;&amp;, std::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;&amp;, char)</fn>
    </frame>
    <frame>
      <ip>0x402C6A</ip>
      <obj>/home/eduardo/Documentos/trabAED/trabAED/bin/Debug/trabAED</obj>
      <fn>readSql(std::string)</fn>
      <dir>/home/eduardo/Documentos/trabAED/trabAED</dir>
      <file>main.cpp</file>
      <line>111</line>
    </frame>
    <frame>
      <ip>0x401B2C</ip>
      <obj>/home/eduardo/Documentos/trabAED/trabAED/bin/Debug/trabAED</obj>
      <fn>main</fn>
      <dir>/home/eduardo/Documentos/trabAED/trabAED</dir>
      <file>main.cpp</file>
      <line>13</line>
    </frame>
  </stack>
</error>

<errorcounts>
  <pair>
    <count>1</count>
    <unique>0x2418</unique>
  </pair>
  <pair>
    <count>148</count>
    <unique>0x7c</unique>
  </pair>
  <pair>
    <count>149</count>
    <unique>0x3c</unique>
  </pair>
  <pair>
    <count>149</count>
    <unique>0x3b</unique>
  </pair>
  <pair>
    <count>1490</count>
    <unique>0x28</unique>
  </pair>
  <pair>
    <count>1490</count>
    <unique>0x27</unique>
  </pair>
  <pair>
    <count>596</count>
    <unique>0x9</unique>
  </pair>
  <pair>
    <count>596</count>
    <unique>0x8</unique>
  </pair>
  <pair>
    <count>596</count>
    <unique>0x7</unique>
  </pair>
  <pair>
    <count>447</count>
    <unique>0x13</unique>
  </pair>
  <pair>
    <count>447</count>
    <unique>0x12</unique>
  </pair>
  <pair>
    <count>447</count>
    <unique>0x11</unique>
  </pair>
  <pair>
    <count>596</count>
    <unique>0x1</unique>
  </pair>
  <pair>
    <count>596</count>
    <unique>0x0</unique>
  </pair>
  <pair>
    <count>298</count>
    <unique>0x6</unique>
  </pair>
  <pair>
    <count>298</count>
    <unique>0x5</unique>
  </pair>
  <pair>
    <count>298</count>
    <unique>0x4</unique>
  </pair>
  <pair>
    <count>298</count>
    <unique>0x3</unique>
  </pair>
  <pair>
    <count>298</count>
    <unique>0x2</unique>
  </pair>
  <pair>
    <count>2</count>
    <unique>0x3d</unique>
  </pair>
  <pair>
    <count>1</count>
    <unique>0x3e</unique>
  </pair>
</errorcounts>

<suppcounts>
</suppcounts>

</valgrindoutput>

